{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../index.js","koara.min.js","../lib/koara.js","../lib/koara/ast/Document.js","../lib/koara/ast/blockElement.js","../lib/koara/ast/blockelement.js","../lib/koara/ast/blockquote.js","../lib/koara/ast/code.js","../lib/koara/ast/codeblock.js","../lib/koara/ast/document.js","../lib/koara/ast/em.js","../lib/koara/ast/heading.js","../lib/koara/ast/image.js","../lib/koara/ast/linebreak.js","../lib/koara/ast/link.js","../lib/koara/ast/listblock.js","../lib/koara/ast/listitem.js","../lib/koara/ast/node.js","../lib/koara/ast/paragraph.js","../lib/koara/ast/strong.js","../lib/koara/ast/text.js","../lib/koara/charstream.js","../lib/koara/io/stringreader.js","../lib/koara/lookaheadsuccess.js","../lib/koara/parser.js","../lib/koara/token.js","../lib/koara/tokenmanager.js","../lib/koara/treestate.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","koara","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"./lib/koara",2,"CharStream","Parser","StringReader","./koara/charstream","./koara/io/stringreader","./koara/parser",3,"Document","Node","prototype","constructor","accept","renderer","visitDocument","./node",4,"BlockElement","isNested","parent","name","isSingleChild","children","visitBlockElement","./document",5,6,"BlockQuote","visitBlockQuote","./blockelement",7,"Code","visitCode",8,"CodeBlock","visitCodeBlock",9,10,"Em","visitEm",11,"Heading","visitHeading",12,"Image","visitImage",13,"LineBreak","visitLineBreak",14,"Link","visitLink",15,"ListBlock","ordered","visitListBlock",16,"ListItem","visitListItem",17,"add","childrenAccept",18,"Paragraph","visitParagraph",19,"Strong","visitStrong",20,"Text","visitText",21,"reader","available","bufsize","tokenBegin","bufcolumn","bufpos","bufline","column","line","prevCharIsLF","buffer","maxNextCharInd","inBuf","tabSize","beginToken","c","readChar","fillBuff","updateLineColumn","read","backup","amount","getImage","slice","join","getEndColumn","getEndLine","getBeginColumn","getBeginLine",22,"text","index","offset","toString","substring","charactersRead","start",23,"LookaheadSuccess",24,"lookAheadSuccess","modules","currentBlockLevel","currentQuoteLevel","TokenManager","Token","TreeState","parse","parseReader","cs","tm","token","tree","nextTokenKind","document","openScope","getNextTokenKind","EOL","consumeToken","whiteSpace","hasAnyBlockElementsAhead","blockElement","blockAhead","EOF","closeScope","indexOf","headingAhead","heading","GT","blockQuote","DASH","unorderedList","hasOrderedListAhead","orderedList","hasFencedCodeBlockAhead","fencedCodeBlock","paragraph","headingLevel","EQ","headingHasInlineElementsAhead","hasTextAhead","hasImageAhead","image","hasLinkAhead","link","hasStrongAhead","strong","hasEmAhead","em","hasCodeAhead","looseChar","value","blockQuoteHasEmptyLineAhead","blockQuoteEmptyLine","blockQuoteHasAnyBlockElementseAhead","blockQuotePrefix","hasBlockQuoteEmptyLinesAhead","list","listBeginColumn","unorderedListItem","listItemAhead","listItem","listItemHasInlineElements","beginColumn","orderedListItem","DIGITS","DOT","number","codeBlock","BACKTICK","CHAR_SEQUENCE","language","codeLanguage","fencesAhead","levelWhiteSpace","ASTERISK","BACKSLASH","COLON","ESCAPED_CHAR","IMAGE_LABEL","LT","LBRACK","RBRACK","LPAREN","RPAREN","UNDERSCORE","nextAfterSpace","SPACE","TAB","inline","textAhead","lineBreak","textHasTokensAhead","ref","imageHasAnyElements","resourceText","hasResourceUrlAhead","resourceUrl","linkHasAnyElements","hasResourceTextAhead","strongHasElements","hasImage","multilineAhead","codeMultiline","strongEmWithinStrongAhead","emWithinStrong","addSingleValue","emHasElements","emHasStrongWithinEm","strongWithinEm","codeText","codeTextHasAnyTokenAhead","linebreak","threshold","currentPos","hasInlineTextAhead","strongMultiline","emMultiline","hasInlineElementAhead","resourceHasElementAhead","resourceUrlText","resourceTextHasElementsAhead","strongMultilineContent","hasEmWithinStrongMultiline","emWithinStrongMultiline","strongMultilineHasElementsAhead","strongWithinEmMultiline","strongWithinEmMultilineContent","strongWithinEmMultilineHasElementsAhead","strongWithinEmHasElementsAhead","emMultilineContent","hasStrongWithinEmMultilineAhead","emMultilineContentHasElementsAhead","emWithinStrongMultilineContent","emWithinStrongMultilineContentHasElementsAhead","emWithinStrongHasElementsAhead","lookAhead","lastPosition","scanPosition","scanMoreBlockElements","ls","blockBeginColumn","quoteLevel","getToken","kind","skip","newQuoteLevel","eol","tokens","scanToken","scanFencedCodeBlock","xsp","scanTextTokens","scanImage","scanLink","scanStrong","scanEm","scanCode","scanLooseChar","scanBlockQuoteEmptyLine","scanBlockQuoteEmptyLines","scanInlineElement","scanImageElement","scanResourceElements","scanLinkElement","scanResourceUrl","scanResourceElement","scanResourceTextElement","scanEmWithinStrongMultiline","scanStrongMultilineElements","scanStrongWithinEmMultilineElements","scanEmWithinStrong","scanStrongElements","scanStrongWithinEmElements","scanStrongWithinEmMultiline","scanEmMultilineContentElements","scanEmWithinStrongMultilineContent","scanStrongWithinEm","scanEmElements","scanEmWithinStrongElements","scanCodeTextTokens","scanText","lookingAhead","semanticLookAhead","scanWhitspaceToken","scanCodeTextTokensAhead","scanCodeMultiline","hasCodeTextOnNextLineAhead","scanWhitespaceTokenBeforeEol","scanWhitspaceTokens","hasNoEmWithinStrongMultilineContentAhead","scanForMoreStrongWithinEmMultilineElements","scanResourceTextElements","scanParagraph","scanForCodeLanguageElement","scanForCodeLanguageElements","scanForHeadersigns","next","getNextToken","nextToken","old","./ast/Document","./ast/blockElement","./ast/blockquote","./ast/code","./ast/codeblock","./ast/em","./ast/heading","./ast/image","./ast/linebreak","./ast/link","./ast/listblock","./ast/listitem","./ast/paragraph","./ast/strong","./ast/text","./charstream","./io/stringreader","./lookaheadsuccess","./token","./tokenmanager","./treestate",25,"beginLine","endLine","endColumn",26,"stream","jjrounds","jjstateSet","jjnextStates","curPos","curChar","matchedKind","matchedPos","fillToken","moveStringLiteralDfa0","charCodeAt","startNfaWithStates","stopAtPos","moveStringLiteralDfa1","moveNfa","pos","state","active","moveStringLiteralDfa2","startNfa","moveStringLiteralDfa3","moveStringLiteralDfa4","moveStringLiteralDfa5","stopStringLiteralDfa","startState","jjnewStateCnt","startsAt","round","Number","Math","pow","bitwise64","checkNAdd","checkNAddStates","end","b","divisor","mask","result","shift","rs","floor",27,"nodes","marks","nodesOnStack","currentMark","push","nodeArity","pop","popNode","pushNode"],"mappings":"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","file":"koara.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require(\"./lib/koara\");\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.koara = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./lib/koara\");\n\n},{\"./lib/koara\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n\n},{\"./koara/charstream\":21,\"./koara/io/stringreader\":22,\"./koara/parser\":24}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":17}],4:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":9,\"./node\":17}],5:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":9,\"./node\":17}],6:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n\n},{\"./blockelement\":5}],7:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n\n},{\"./node\":17}],8:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n\n},{\"./blockelement\":5}],9:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":17}],10:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n\n},{\"./node\":17}],11:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n\n},{\"./blockelement\":5}],12:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n\n},{\"./node\":17}],13:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n\n},{\"./node\":17}],14:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n\n},{\"./node\":17}],15:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n\n},{\"./blockelement\":5}],16:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n\n},{\"./node\":17}],17:[function(require,module,exports){\n\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n\n},{\"./blockelement\":5}],19:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n\n},{\"./node\":17}],20:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n\n},{\"./node\":17}],21:[function(require,module,exports){\n\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockElement = require(\"./ast/blockElement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n\n},{\"./ast/Document\":3,\"./ast/blockElement\":4,\"./ast/blockquote\":6,\"./ast/code\":7,\"./ast/codeblock\":8,\"./ast/em\":10,\"./ast/heading\":11,\"./ast/image\":12,\"./ast/linebreak\":13,\"./ast/link\":14,\"./ast/listblock\":15,\"./ast/listitem\":16,\"./ast/paragraph\":18,\"./ast/strong\":19,\"./ast/text\":20,\"./charstream\":21,\"./io/stringreader\":22,\"./lookaheadsuccess\":23,\"./token\":25,\"./tokenmanager\":26,\"./treestate\":27}],25:[function(require,module,exports){\n\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n},{\"./token\":25}],27:[function(require,module,exports){\n\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n\n},{}]},{},[1])(1)\n});\n\n","\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n","\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n","\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n","\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n","\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockElement = require(\"./ast/blockElement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n","\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n","\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n","\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n"],"sourceRoot":"/source/"}