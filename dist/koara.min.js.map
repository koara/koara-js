{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../index.js","koara.min.js","../lib/koara.js","../lib/koara/ast/Document.js","../lib/koara/ast/blockElement.js","../lib/koara/ast/blockelement.js","../lib/koara/ast/blockquote.js","../lib/koara/ast/code.js","../lib/koara/ast/codeblock.js","../lib/koara/ast/document.js","../lib/koara/ast/em.js","../lib/koara/ast/heading.js","../lib/koara/ast/image.js","../lib/koara/ast/linebreak.js","../lib/koara/ast/link.js","../lib/koara/ast/listblock.js","../lib/koara/ast/listitem.js","../lib/koara/ast/node.js","../lib/koara/ast/paragraph.js","../lib/koara/ast/strong.js","../lib/koara/ast/text.js","../lib/koara/charstream.js","../lib/koara/io/stringreader.js","../lib/koara/lookaheadsuccess.js","../lib/koara/parser.js","../lib/koara/token.js","../lib/koara/tokenmanager.js","../lib/koara/treestate.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","./lib/koara",2,"CharStream","Parser","StringReader","./koara/charstream","./koara/io/stringreader","./koara/parser",3,"Document","Node","this","prototype","constructor","accept","renderer","visitDocument","./node",4,"BlockElement","isNested","parent","name","isSingleChild","children","visitBlockElement","./document",5,6,"BlockQuote","visitBlockQuote","./blockelement",7,"Code","visitCode",8,"CodeBlock","visitCodeBlock",9,10,"Em","visitEm",11,"Heading","visitHeading",12,"Image","visitImage",13,"LineBreak","visitLineBreak",14,"Link","visitLink",15,"ListBlock","ordered","visitListBlock",16,"ListItem","visitListItem",17,"add","childrenAccept",18,"Paragraph","visitParagraph",19,"Strong","visitStrong",20,"Text","visitText",21,"reader","available","bufsize","tokenBegin","bufcolumn","bufpos","bufline","column","line","prevCharIsLF","buffer","maxNextCharInd","inBuf","tabSize","beginToken","c","readChar","fillBuff","updateLineColumn","read","backup","amount","getImage","slice","join","getEndColumn","getEndLine","getBeginColumn","getBeginLine",22,"text","index","offset","toString","substring","charactersRead","start",23,"LookaheadSuccess",24,"lookAheadSuccess","modules","currentBlockLevel","currentQuoteLevel","TokenManager","Token","TreeState","parse","parseReader","cs","tm","token","tree","nextTokenKind","document","openScope","getNextTokenKind","EOL","consumeToken","whiteSpace","hasAnyBlockElementsAhead","blockElement","blockAhead","EOF","closeScope","indexOf","headingAhead","heading","GT","blockQuote","DASH","unorderedList","hasOrderedListAhead","orderedList","hasFencedCodeBlockAhead","fencedCodeBlock","paragraph","headingLevel","EQ","headingHasInlineElementsAhead","hasTextAhead","hasImageAhead","image","hasLinkAhead","link","hasStrongAhead","strong","hasEmAhead","em","hasCodeAhead","looseChar","value","blockQuoteHasEmptyLineAhead","blockQuoteEmptyLine","blockQuoteHasAnyBlockElementseAhead","blockQuotePrefix","hasBlockQuoteEmptyLinesAhead","list","listBeginColumn","unorderedListItem","listItemAhead","listItem","listItemHasInlineElements","beginColumn","orderedListItem","DIGITS","DOT","number","codeBlock","BACKTICK","CHAR_SEQUENCE","language","codeLanguage","fencesAhead","levelWhiteSpace","ASTERISK","BACKSLASH","COLON","ESCAPED_CHAR","IMAGE_LABEL","LT","LBRACK","RBRACK","LPAREN","RPAREN","UNDERSCORE","nextAfterSpace","SPACE","TAB","inline","textAhead","lineBreak","textHasTokensAhead","ref","imageHasAnyElements","resourceText","hasResourceUrlAhead","resourceUrl","linkHasAnyElements","hasResourceTextAhead","strongHasElements","hasImage","multilineAhead","codeMultiline","strongEmWithinStrongAhead","emWithinStrong","addSingleValue","emHasElements","emHasStrongWithinEm","strongWithinEm","codeText","codeTextHasAnyTokenAhead","linebreak","threshold","currentPos","hasInlineTextAhead","strongMultiline","emMultiline","hasInlineElementAhead","resourceHasElementAhead","resourceUrlText","resourceTextHasElementsAhead","strongMultilineContent","hasEmWithinStrongMultiline","emWithinStrongMultiline","strongMultilineHasElementsAhead","strongWithinEmMultiline","strongWithinEmMultilineContent","strongWithinEmMultilineHasElementsAhead","strongWithinEmHasElementsAhead","emMultilineContent","hasStrongWithinEmMultilineAhead","emMultilineContentHasElementsAhead","emWithinStrongMultilineContent","emWithinStrongMultilineContentHasElementsAhead","emWithinStrongHasElementsAhead","lookAhead","lastPosition","scanPosition","scanMoreBlockElements","ls","blockBeginColumn","quoteLevel","getToken","kind","skip","newQuoteLevel","eol","tokens","scanToken","scanFencedCodeBlock","xsp","scanTextTokens","scanImage","scanLink","scanStrong","scanEm","scanCode","scanLooseChar","scanBlockQuoteEmptyLine","scanBlockQuoteEmptyLines","scanInlineElement","scanImageElement","scanResourceElements","scanLinkElement","scanResourceUrl","scanResourceElement","scanResourceTextElement","scanEmWithinStrongMultiline","scanStrongMultilineElements","scanStrongWithinEmMultilineElements","scanEmWithinStrong","scanStrongElements","scanStrongWithinEmElements","scanStrongWithinEmMultiline","scanEmMultilineContentElements","scanEmWithinStrongMultilineContent","scanStrongWithinEm","scanEmElements","scanEmWithinStrongElements","scanCodeTextTokens","scanText","lookingAhead","semanticLookAhead","scanWhitspaceToken","scanCodeTextTokensAhead","scanCodeMultiline","hasCodeTextOnNextLineAhead","scanWhitespaceTokenBeforeEol","scanWhitspaceTokens","hasNoEmWithinStrongMultilineContentAhead","scanForMoreStrongWithinEmMultilineElements","scanResourceTextElements","scanParagraph","scanForCodeLanguageElement","scanForCodeLanguageElements","scanForHeadersigns","next","getNextToken","nextToken","old","./ast/Document","./ast/blockElement","./ast/blockquote","./ast/code","./ast/codeblock","./ast/em","./ast/heading","./ast/image","./ast/linebreak","./ast/link","./ast/listblock","./ast/listitem","./ast/paragraph","./ast/strong","./ast/text","./charstream","./io/stringreader","./lookaheadsuccess","./token","./tokenmanager","./treestate",25,"beginLine","endLine","endColumn",26,"stream","jjrounds","jjstateSet","jjnextStates","curPos","curChar","matchedKind","matchedPos","fillToken","moveStringLiteralDfa0","charCodeAt","startNfaWithStates","stopAtPos","moveStringLiteralDfa1","moveNfa","pos","state","active","moveStringLiteralDfa2","startNfa","moveStringLiteralDfa3","moveStringLiteralDfa4","moveStringLiteralDfa5","stopStringLiteralDfa","startState","jjnewStateCnt","startsAt","round","Number","Math","pow","bitwise64","checkNAdd","checkNAddStates","end","b","divisor","mask","result","shift","rs","floor",27,"nodes","marks","nodesOnStack","currentMark","push","nodeArity","pop","popNode","pushNode"],"mappings":"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","file":"koara.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require(\"./lib/koara\");\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./lib/koara\");\n\n},{\"./lib/koara\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n\n},{\"./koara/charstream\":21,\"./koara/io/stringreader\":22,\"./koara/parser\":24}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":17}],4:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":9,\"./node\":17}],5:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":9,\"./node\":17}],6:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n\n},{\"./blockelement\":5}],7:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n\n},{\"./node\":17}],8:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n\n},{\"./blockelement\":5}],9:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":17}],10:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n\n},{\"./node\":17}],11:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n\n},{\"./blockelement\":5}],12:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n\n},{\"./node\":17}],13:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n\n},{\"./node\":17}],14:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n\n},{\"./node\":17}],15:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n\n},{\"./blockelement\":5}],16:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n\n},{\"./node\":17}],17:[function(require,module,exports){\n\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n\n},{}],18:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n\n},{\"./blockelement\":5}],19:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n\n},{\"./node\":17}],20:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n\n},{\"./node\":17}],21:[function(require,module,exports){\n\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockElement = require(\"./ast/blockElement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens()) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanForCodeLanguageElements()) {\n            this.scanPosition = xsp;\n        }\n        xsp = this.scanPosition;\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n\n},{\"./ast/Document\":3,\"./ast/blockElement\":4,\"./ast/blockquote\":6,\"./ast/code\":7,\"./ast/codeblock\":8,\"./ast/em\":10,\"./ast/heading\":11,\"./ast/image\":12,\"./ast/linebreak\":13,\"./ast/link\":14,\"./ast/listblock\":15,\"./ast/listitem\":16,\"./ast/paragraph\":18,\"./ast/strong\":19,\"./ast/text\":20,\"./charstream\":21,\"./io/stringreader\":22,\"./lookaheadsuccess\":23,\"./token\":25,\"./tokenmanager\":26,\"./treestate\":27}],25:[function(require,module,exports){\n\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n\n},{}],26:[function(require,module,exports){\n\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n},{\"./token\":25}],27:[function(require,module,exports){\n\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n\n},{}]},{},[1])\n\n","\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n","\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n","\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n","\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n","\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockElement = require(\"./ast/blockElement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens()) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanForCodeLanguageElements()) {\n            this.scanPosition = xsp;\n        }\n        xsp = this.scanPosition;\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n","\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n","\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n","\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n"],"sourceRoot":"/source/"}