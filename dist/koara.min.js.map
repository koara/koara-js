{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../index.js","koara.min.js","../lib/koara.js","../lib/koara/ast/blockelement.js","../lib/koara/ast/blockquote.js","../lib/koara/ast/code.js","../lib/koara/ast/codeblock.js","../lib/koara/ast/document.js","../lib/koara/ast/em.js","../lib/koara/ast/heading.js","../lib/koara/ast/image.js","../lib/koara/ast/linebreak.js","../lib/koara/ast/link.js","../lib/koara/ast/listblock.js","../lib/koara/ast/listitem.js","../lib/koara/ast/node.js","../lib/koara/ast/paragraph.js","../lib/koara/ast/strong.js","../lib/koara/ast/text.js","../lib/koara/charstream.js","../lib/koara/io/stringreader.js","../lib/koara/lookaheadsuccess.js","../lib/koara/parser.js","../lib/koara/token.js","../lib/koara/tokenmanager.js","../lib/koara/treestate.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","koara","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","./lib/koara","2","CharStream","Parser","StringReader","./koara/charstream","./koara/io/stringreader","./koara/parser","3","BlockElement","Node","prototype","constructor","isNested","parent","name","isSingleChild","children","accept","renderer","visitBlockElement","./document","./node","4","BlockQuote","visitBlockQuote","./blockelement","5","Code","visitCode","6","CodeBlock","visitCodeBlock","7","Document","visitDocument","8","Em","visitEm","9","Heading","visitHeading","10","Image","visitImage","11","LineBreak","visitLineBreak","12","Link","visitLink","13","ListBlock","ordered","visitListBlock","14","ListItem","visitListItem","15","add","childrenAccept","16","Paragraph","visitParagraph","17","Strong","visitStrong","18","Text","visitText","19","reader","available","bufsize","tokenBegin","bufcolumn","bufpos","bufline","column","line","prevCharIsLF","buffer","maxNextCharInd","inBuf","tabSize","beginToken","c","readChar","fillBuff","updateLineColumn","read","backup","amount","getImage","slice","join","getEndColumn","getEndLine","getBeginColumn","getBeginLine","20","text","index","offset","toString","substring","charactersRead","start","21","LookaheadSuccess","22","lookAheadSuccess","modules","currentBlockLevel","currentQuoteLevel","TokenManager","Token","TreeState","parse","parseReader","cs","tm","token","tree","nextTokenKind","document","openScope","getNextTokenKind","EOL","consumeToken","whiteSpace","hasAnyBlockElementsAhead","blockElement","blockAhead","EOF","closeScope","indexOf","headingAhead","heading","GT","blockQuote","DASH","unorderedList","hasOrderedListAhead","orderedList","hasFencedCodeBlockAhead","fencedCodeBlock","paragraph","headingLevel","EQ","headingHasInlineElementsAhead","hasTextAhead","hasImageAhead","image","hasLinkAhead","link","hasStrongAhead","strong","hasEmAhead","em","hasCodeAhead","looseChar","value","blockQuoteHasEmptyLineAhead","blockQuoteEmptyLine","blockQuoteHasAnyBlockElementseAhead","blockQuotePrefix","hasBlockQuoteEmptyLinesAhead","list","listBeginColumn","unorderedListItem","listItemAhead","listItem","listItemHasInlineElements","beginColumn","orderedListItem","DIGITS","DOT","number","codeBlock","BACKTICK","CHAR_SEQUENCE","language","codeLanguage","fencesAhead","levelWhiteSpace","ASTERISK","BACKSLASH","COLON","ESCAPED_CHAR","IMAGE_LABEL","LT","LBRACK","RBRACK","LPAREN","RPAREN","UNDERSCORE","nextAfterSpace","SPACE","TAB","inline","textAhead","lineBreak","textHasTokensAhead","ref","imageHasAnyElements","resourceText","hasResourceUrlAhead","resourceUrl","linkHasAnyElements","hasResourceTextAhead","strongHasElements","hasImage","multilineAhead","codeMultiline","strongEmWithinStrongAhead","emWithinStrong","addSingleValue","emHasElements","emHasStrongWithinEm","strongWithinEm","codeText","codeTextHasAnyTokenAhead","linebreak","threshold","currentPos","hasInlineTextAhead","strongMultiline","emMultiline","hasInlineElementAhead","resourceHasElementAhead","resourceUrlText","resourceTextHasElementsAhead","strongMultilineContent","hasEmWithinStrongMultiline","emWithinStrongMultiline","strongMultilineHasElementsAhead","strongWithinEmMultiline","strongWithinEmMultilineContent","strongWithinEmMultilineHasElementsAhead","strongWithinEmHasElementsAhead","emMultilineContent","hasStrongWithinEmMultilineAhead","emMultilineContentHasElementsAhead","emWithinStrongMultilineContent","emWithinStrongMultilineContentHasElementsAhead","emWithinStrongHasElementsAhead","lookAhead","lastPosition","scanPosition","scanMoreBlockElements","ls","blockBeginColumn","quoteLevel","getToken","kind","skip","newQuoteLevel","eol","tokens","scanToken","scanFencedCodeBlock","xsp","scanTextTokens","scanImage","scanLink","scanStrong","scanEm","scanCode","scanLooseChar","scanBlockQuoteEmptyLine","scanBlockQuoteEmptyLines","scanInlineElement","scanImageElement","scanResourceElements","scanLinkElement","scanResourceUrl","scanResourceElement","scanResourceTextElement","scanEmWithinStrongMultiline","scanStrongMultilineElements","scanStrongWithinEmMultilineElements","scanEmWithinStrong","scanStrongElements","scanStrongWithinEmElements","scanStrongWithinEmMultiline","scanEmMultilineContentElements","scanEmWithinStrongMultilineContent","scanStrongWithinEm","scanEmElements","scanEmWithinStrongElements","scanCodeTextTokens","scanText","lookingAhead","semanticLookAhead","scanWhitspaceToken","scanCodeTextTokensAhead","scanCodeMultiline","hasCodeTextOnNextLineAhead","scanWhitespaceTokenBeforeEol","scanWhitspaceTokens","hasNoEmWithinStrongMultilineContentAhead","scanForMoreStrongWithinEmMultilineElements","scanResourceTextElements","scanParagraph","scanForHeadersigns","next","getNextToken","nextToken","old","./ast/blockelement","./ast/blockquote","./ast/code","./ast/codeblock","./ast/document","./ast/em","./ast/heading","./ast/image","./ast/linebreak","./ast/link","./ast/listblock","./ast/listitem","./ast/paragraph","./ast/strong","./ast/text","./charstream","./io/stringreader","./lookaheadsuccess","./token","./tokenmanager","./treestate","23","beginLine","endLine","endColumn","24","stream","jjrounds","jjstateSet","jjnextStates","curPos","curChar","matchedKind","matchedPos","fillToken","moveStringLiteralDfa0","charCodeAt","startNfaWithStates","stopAtPos","moveStringLiteralDfa1","moveNfa","pos","state","active","moveStringLiteralDfa2","startNfa","moveStringLiteralDfa3","moveStringLiteralDfa4","moveStringLiteralDfa5","stopStringLiteralDfa","startState","jjnewStateCnt","startsAt","round","Number","Math","pow","bitwise64","checkNAdd","checkNAddStates","end","b","divisor","mask","result","shift","rs","floor","25","nodes","marks","nodesOnStack","currentMark","push","nodeArity","pop","popNode","pushNode"],"mappings":"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","file":"koara.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require(\"./lib/koara\");\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.koara = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./lib/koara\");\n\n},{\"./lib/koara\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n\n},{\"./koara/charstream\":19,\"./koara/io/stringreader\":20,\"./koara/parser\":22}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":7,\"./node\":15}],4:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n\n},{\"./blockelement\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n\n},{\"./node\":15}],6:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n\n},{\"./blockelement\":3}],7:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":15}],8:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n\n},{\"./node\":15}],9:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n\n},{\"./blockelement\":3}],10:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n\n},{\"./node\":15}],11:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n\n},{\"./node\":15}],12:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n\n},{\"./node\":15}],13:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n\n},{\"./blockelement\":3}],14:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n\n},{\"./node\":15}],15:[function(require,module,exports){\n\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n\n},{\"./blockelement\":3}],17:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n\n},{\"./node\":15}],18:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n\n},{\"./node\":15}],19:[function(require,module,exports){\n\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/document\");\nvar BlockElement = require(\"./ast/blockelement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n\n},{\"./ast/blockelement\":3,\"./ast/blockquote\":4,\"./ast/code\":5,\"./ast/codeblock\":6,\"./ast/document\":7,\"./ast/em\":8,\"./ast/heading\":9,\"./ast/image\":10,\"./ast/linebreak\":11,\"./ast/link\":12,\"./ast/listblock\":13,\"./ast/listitem\":14,\"./ast/paragraph\":16,\"./ast/strong\":17,\"./ast/text\":18,\"./charstream\":19,\"./io/stringreader\":20,\"./lookaheadsuccess\":21,\"./token\":23,\"./tokenmanager\":24,\"./treestate\":25}],23:[function(require,module,exports){\n\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n\n},{}],24:[function(require,module,exports){\n\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n},{\"./token\":23}],25:[function(require,module,exports){\n\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n\n},{}]},{},[1])(1)\n});\n\n","\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n","\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n","\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n","\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n","\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/document\");\nvar BlockElement = require(\"./ast/blockelement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n","\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n","\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n","\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n"],"sourceRoot":"/source/"}