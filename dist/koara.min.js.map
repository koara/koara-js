{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","../index.js","koara.min.js","../lib/koara.js","../lib/koara/ast/blockelement.js","../lib/koara/ast/blockquote.js","../lib/koara/ast/code.js","../lib/koara/ast/codeblock.js","../lib/koara/ast/document.js","../lib/koara/ast/em.js","../lib/koara/ast/heading.js","../lib/koara/ast/image.js","../lib/koara/ast/linebreak.js","../lib/koara/ast/link.js","../lib/koara/ast/listblock.js","../lib/koara/ast/listitem.js","../lib/koara/ast/node.js","../lib/koara/ast/paragraph.js","../lib/koara/ast/strong.js","../lib/koara/ast/text.js","../lib/koara/charstream.js","../lib/koara/io/stringreader.js","../lib/koara/koararenderer.js","../lib/koara/lookaheadsuccess.js","../lib/koara/parser.js","../lib/koara/token.js","../lib/koara/tokenmanager.js","../lib/koara/treestate.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","koara","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","./lib/koara","2","CharStream","KoaraRenderer","Parser","StringReader","TokenManager","./koara/charstream","./koara/io/stringreader","./koara/koararenderer","./koara/parser","./koara/tokenmanager","3","BlockElement","Node","prototype","constructor","hasChildren","children","isFirstChild","parent","isLastChild","isNested","name","isSingleChild","next","accept","renderer","visitBlockElement","./document","./node","4","BlockQuote","visitBlockQuote","./blockelement","5","Code","visitCode","6","CodeBlock","visitCodeBlock","7","Document","visitDocument","8","Em","visitEm","9","Heading","visitHeading","10","Image","visitImage","11","LineBreak","visitLineBreak","12","Link","visitLink","13","ListBlock","ordered","visitListBlock","14","ListItem","visitListItem","15","add","childrenAccept","16","Paragraph","visitParagraph","17","Strong","visitStrong","18","Text","visitText","19","reader","available","bufsize","tokenBegin","bufcolumn","bufpos","bufline","column","line","prevCharIsLF","buffer","maxNextCharInd","inBuf","tabSize","beginToken","c","readChar","fillBuff","updateLineColumn","read","backup","amount","getImage","slice","join","getEndColumn","getEndLine","getBeginColumn","getBeginLine","20","text","index","offset","toString","substring","charactersRead","start","21","out","node","left","hardWrap","indent","value","push","pop","number","str","language","replace","trim","escapeUrl","escape","explicit","getOutput","22","LookaheadSuccess","23","lookAheadSuccess","modules","currentBlockLevel","currentQuoteLevel","Token","TreeState","parse","parseReader","cs","tm","token","tree","nextTokenKind","document","openScope","getNextTokenKind","EOL","consumeToken","whiteSpace","hasAnyBlockElementsAhead","blockElement","blockAhead","EOF","closeScope","indexOf","headingAhead","heading","GT","blockQuote","DASH","unorderedList","hasOrderedListAhead","orderedList","hasFencedCodeBlockAhead","fencedCodeBlock","paragraph","headingLevel","EQ","headingHasInlineElementsAhead","hasTextAhead","hasImageAhead","image","hasLinkAhead","link","hasStrongAhead","strong","hasEmAhead","em","hasCodeAhead","looseChar","blockQuoteHasEmptyLineAhead","blockQuoteEmptyLine","blockQuoteHasAnyBlockElementseAhead","blockQuotePrefix","hasBlockQuoteEmptyLinesAhead","list","listBeginColumn","unorderedListItem","listItemAhead","listItem","listItemHasInlineElements","beginColumn","orderedListItem","DIGITS","DOT","codeBlock","BACKTICK","CHAR_SEQUENCE","codeLanguage","fencesAhead","levelWhiteSpace","ASTERISK","BACKSLASH","COLON","ESCAPED_CHAR","IMAGE_LABEL","LT","LBRACK","RBRACK","LPAREN","RPAREN","UNDERSCORE","nextAfterSpace","SPACE","TAB","inline","textAhead","lineBreak","textHasTokensAhead","ref","imageHasAnyElements","resourceText","hasResourceUrlAhead","resourceUrl","linkHasAnyElements","hasResourceTextAhead","strongHasElements","hasImage","multilineAhead","codeMultiline","strongEmWithinStrongAhead","emWithinStrong","addSingleValue","emHasElements","emHasStrongWithinEm","strongWithinEm","codeText","codeTextHasAnyTokenAhead","linebreak","threshold","currentPos","hasInlineTextAhead","strongMultiline","emMultiline","hasInlineElementAhead","resourceHasElementAhead","resourceUrlText","resourceTextHasElementsAhead","strongMultilineContent","hasEmWithinStrongMultiline","emWithinStrongMultiline","strongMultilineHasElementsAhead","strongWithinEmMultiline","strongWithinEmMultilineContent","strongWithinEmMultilineHasElementsAhead","strongWithinEmHasElementsAhead","emMultilineContent","hasStrongWithinEmMultilineAhead","emMultilineContentHasElementsAhead","emWithinStrongMultilineContent","emWithinStrongMultilineContentHasElementsAhead","emWithinStrongHasElementsAhead","lookAhead","lastPosition","scanPosition","scanMoreBlockElements","ls","blockBeginColumn","quoteLevel","getToken","kind","skip","newQuoteLevel","eol","tokens","scanToken","scanFencedCodeBlock","xsp","scanTextTokens","scanImage","scanLink","scanStrong","scanEm","scanCode","scanLooseChar","scanBlockQuoteEmptyLine","scanBlockQuoteEmptyLines","scanInlineElement","scanImageElement","scanResourceElements","scanLinkElement","scanResourceUrl","scanResourceElement","scanResourceTextElement","scanEmWithinStrongMultiline","scanStrongMultilineElements","scanStrongWithinEmMultilineElements","scanEmWithinStrong","scanStrongElements","scanStrongWithinEmElements","scanStrongWithinEmMultiline","scanEmMultilineContentElements","scanEmWithinStrongMultilineContent","scanStrongWithinEm","scanEmElements","scanEmWithinStrongElements","scanCodeTextTokens","scanText","lookingAhead","semanticLookAhead","scanWhitspaceToken","scanCodeTextTokensAhead","scanCodeMultiline","hasCodeTextOnNextLineAhead","scanWhitespaceTokenBeforeEol","scanWhitspaceTokens","hasNoEmWithinStrongMultilineContentAhead","scanForMoreStrongWithinEmMultilineElements","scanResourceTextElements","scanParagraph","scanForHeadersigns","getNextToken","nextToken","old","./ast/blockelement","./ast/blockquote","./ast/code","./ast/codeblock","./ast/document","./ast/em","./ast/heading","./ast/image","./ast/linebreak","./ast/link","./ast/listblock","./ast/listitem","./ast/paragraph","./ast/strong","./ast/text","./charstream","./io/stringreader","./lookaheadsuccess","./token","./tokenmanager","./treestate","24","beginLine","endLine","endColumn","25","stream","jjrounds","jjstateSet","jjnextStates","curPos","curChar","matchedKind","matchedPos","fillToken","moveStringLiteralDfa0","charCodeAt","startNfaWithStates","stopAtPos","moveStringLiteralDfa1","moveNfa","pos","state","active","moveStringLiteralDfa2","startNfa","moveStringLiteralDfa3","moveStringLiteralDfa4","moveStringLiteralDfa5","stopStringLiteralDfa","startState","jjnewStateCnt","startsAt","round","Number","Math","pow","bitwise64","checkNAdd","checkNAddStates","end","b","divisor","mask","result","shift","rs","floor","26","nodes","marks","nodesOnStack","currentMark","nodeArity","popNode","pushNode"],"mappings":"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","file":"koara.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require(\"./lib/koara\");\n","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.koara = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./lib/koara\");\n\n},{\"./lib/koara\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.KoaraRenderer = require(\"./koara/koararenderer\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\nexports.TokenManager = require(\"./koara/tokenmanager\");\n\n},{\"./koara/charstream\":19,\"./koara/io/stringreader\":20,\"./koara/koararenderer\":21,\"./koara/parser\":23,\"./koara/tokenmanager\":25}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.hasChildren = function() {\n    return this.children && this.children.length > 0;;\n};\n\nBlockElement.prototype.isFirstChild = function() {\n\treturn this.parent.children[0] === this;\n};\n\nBlockElement.prototype.isLastChild = function() {\n\treturn this.parent.children[this.parent.children.length - 1] === this;\n};\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.next = function() {\n\tfor(var i = 0; i < this.parent.children.length - 1; i++) {\n\t\tif(this.parent.children[i] == this) {\n\t\t\treturn this.parent.children[i + 1];\n\t\t}\n\t}\n\treturn null;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":7,\"./node\":15}],4:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n\n},{\"./blockelement\":3}],5:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n\n},{\"./node\":15}],6:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n\n},{\"./blockelement\":3}],7:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":15}],8:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n\n},{\"./node\":15}],9:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n\n},{\"./blockelement\":3}],10:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n\n},{\"./node\":15}],11:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n\n},{\"./node\":15}],12:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n\n},{\"./node\":15}],13:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n\n},{\"./blockelement\":3}],14:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListItem() {\n\tBlockElement.call(this);\n}\n\nListItem.prototype = new BlockElement();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n\n},{\"./blockelement\":3}],15:[function(require,module,exports){\n\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n\n},{\"./blockelement\":3}],17:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n\n},{\"./node\":15}],18:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n\n},{\"./node\":15}],19:[function(require,module,exports){\n\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n\n},{}],20:[function(require,module,exports){\n\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nfunction KoaraRenderer() {\n\tthis.out = \"\";\n}\n\nKoaraRenderer.prototype = {\n\tconstructor: KoaraRenderer,\n\n\tvisitDocument: function(node) {\n\t\tthis.out = \"\";\n\t\tthis.left = [];\n\t\tthis.hardWrap = false;\n\t\tnode.childrenAccept(this);\n\t},\n\n\tvisitHeading: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tfor(var i=0; i<node.value; i++) {\n\t\t\tthis.out += \"=\";\n\t\t}\n\t\tif(node.hasChildren()) {\n\t\t  this.out += \" \";\n\t\t  node.childrenAccept(this);\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitBlockQuote: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\t\t\n\t\tif(node.hasChildren()) {\n\t\t\tthis.out += \"> \";\n\t\t\tthis.left.push(\"> \");\n\t\t\tnode.childrenAccept(this);\n\t\t\tthis.left.pop();\n\t\t} else {\n\t\t\tthis.out += \">\\n\";\n\t\t}\n\t\tif(!node.isNested()) {\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitListBlock: function(node) {\n\t\tnode.childrenAccept(this);\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t\tvar next = node.next();\n\t\t\tif(next.constructor.name === \"ListBlock\" && next.ordered === node.ordered) {\n\t\t\t\tthis.out += \"\\n\";\n\t\t\t}\n\t\t}\n\t},\n\n\tvisitListItem: function(node) {\n\t\tif(!node.parent.isNested() || !node.isFirstChild() || !node.parent.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tthis.left.push(\"  \");\n\t\tif(node.number) {\t\t\t\n\t\t\tthis.out += (node.number + \".\");\n\t\t} else {\n\t\t\tthis.out += \"-\";\n\t\t}\n\t\tif(node.hasChildren()) {\n\t\t\tthis.out += \" \";\n\t\t\tnode.childrenAccept(this);\n\t\t} else {\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t\tthis.left.pop();\n\t},\n\n\tvisitCodeBlock: function(node) {\n\t\tvar str = this.left.join(\"\");\n\t\tthis.out += \"```\";\n\t\tif(node.language) {\n\t\t\tthis.out += node.language;\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tthis.out += node.value.toString().replace(/^/gm, str);\n\t\tthis.out += \"\\n\";\n\t\tthis.indent();\n\t\tthis.out += \"```\";\t\t\n\t\tthis.out += \"\\n\";\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitParagraph: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"\\n\";\n\t\t\n\t\tvar next = node.next();\n\t\tif(!node.isNested() || (node.parent.constructor.name === \"ListItem\" && (next && next.constructor.name === \"Paragraph\") && !node.isLastChild())) {\n\t\t\tthis.out += \"\\n\";\n\t\t} else if(node.parent.constructor.name === \"BlockQuote\" && (next && next.constructor.name === \"Paragraph\")) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\t\n\tvisitBlockElement: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"\\n\";\n\t\tvar next = node.next();\n\t\tif(!node.isNested() || (node.parent.constructor.name === \"ListItem\" && (next && next.constructor.name === \"Paragraph\") && !node.isLastChild())) {\n\t\t\tthis.out += \"\\n\";\n\t\t} else if(node.parent.constructor.name === \"BlockQuote\" && (next && next.constructor.name === \"Paragraph\")) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitImage: function(node) {\n\t\tthis.out += \"[image: \";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"]\";\n\t\tif(node.value && node.value.trim().length > 0) {\n\t\t\tthis.out += \"(\";\n\t\t\tthis.out += this.escapeUrl(node.value);\n\t\t\tthis.out += \")\";\n\t\t}\n\t},\n\n\tvisitLink: function(node) {\n\t\tthis.out += \"[\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"]\";\n\t\tif(node.value && node.value.toString().trim().length > 0) {\n\t\t\tthis.out += \"(\";\n\t\t\tthis.out += this.escapeUrl(node.value);\n\t\t\tthis.out += \")\";\n\t\t}\n\t},\n\n\tvisitStrong: function(node) {\n\t\tthis.out += \"*\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"*\";\n\t},\n\n\tvisitEm: function(node) {\n\t\tthis.out += \"_\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"_\";\n\t},\n\n\tvisitCode: function(node) {\n\t\tthis.out += \"`\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"`\";\n\t},\n\n\tvisitText: function(node) {\n\t\tif(node.parent.constructor.name === \"Code\") {\n\t\t\tthis.out += node.value;\n\t\t} else {\n\t\t\tthis.out += this.escape(node.value);\n\t\t}\n\t},\n\n\tvisitLineBreak: function(node) {\n\t\tif(this.hardWrap || node.explicit) {\n\t\t\tthis.out += \"  \";\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tthis.indent();\n\t},\n\t\n\tescape: function(text) {\n\t\treturn text\n\t\t\t\t.replace(/\\[/gm, \"\\\\[\")\n\t\t\t\t.replace(/\\]/gm, \"\\\\]\")\n\t\t\t\t.replace(/\\*/gm, \"\\\\*\")\n\t\t\t\t.replace(/\\_/gm, \"\\\\_\")\n\t\t\t\t.replace(\"`\", \"\\\\`\")\n\t\t\t\t.replace(\"=\", \"\\\\=\")\n\t\t\t\t.replace(\">\", \"\\\\>\")\n\t\t\t\t.replace(\"-\", \"\\\\-\")\n\t\t\t\t.replace(/(\\d+)\\./, \"\\\\$1.\");\n\t},\n\t\n\tescapeUrl: function(text) {\n        return text.replace(/\\(/gm, \"\\\\(\")\n        \t.replace(/\\)/gm, \"\\\\)\");\n\t},\n\t\n\tindent: function() {\n\t\tthis.out += this.left.join(\"\");\n\t},\n\n\tgetOutput: function() {\n        return this.out.trim();\n\t}\n\n};\n\nmodule.exports = KoaraRenderer;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/document\");\nvar BlockElement = require(\"./ast/blockelement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.blockQuotePrefix();\n            this.whiteSpace();\n            \n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        var token = this.consumeToken(this.tm.EOL);\n        linebreak.explicit = (token.image.substring(0, 2) == \"  \");\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.whiteSpace();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n\n},{\"./ast/blockelement\":3,\"./ast/blockquote\":4,\"./ast/code\":5,\"./ast/codeblock\":6,\"./ast/document\":7,\"./ast/em\":8,\"./ast/heading\":9,\"./ast/image\":10,\"./ast/linebreak\":11,\"./ast/link\":12,\"./ast/listblock\":13,\"./ast/listitem\":14,\"./ast/paragraph\":16,\"./ast/strong\":17,\"./ast/text\":18,\"./charstream\":19,\"./io/stringreader\":20,\"./lookaheadsuccess\":22,\"./token\":24,\"./tokenmanager\":25,\"./treestate\":26}],24:[function(require,module,exports){\n\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n\n},{}],25:[function(require,module,exports){\n\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n},{\"./token\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n\n},{}]},{},[1])(1)\n});\n\n","\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.KoaraRenderer = require(\"./koara/koararenderer\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\nexports.TokenManager = require(\"./koara/tokenmanager\");\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.hasChildren = function() {\n    return this.children && this.children.length > 0;;\n};\n\nBlockElement.prototype.isFirstChild = function() {\n\treturn this.parent.children[0] === this;\n};\n\nBlockElement.prototype.isLastChild = function() {\n\treturn this.parent.children[this.parent.children.length - 1] === this;\n};\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent.constructor.name === \"Document\");\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.next = function() {\n\tfor(var i = 0; i < this.parent.children.length - 1; i++) {\n\t\tif(this.parent.children[i] == this) {\n\t\t\treturn this.parent.children[i + 1];\n\t\t}\n\t}\n\treturn null;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListItem() {\n\tBlockElement.call(this);\n}\n\nListItem.prototype = new BlockElement();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n","\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n","\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n","\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nfunction KoaraRenderer() {\n\tthis.out = \"\";\n}\n\nKoaraRenderer.prototype = {\n\tconstructor: KoaraRenderer,\n\n\tvisitDocument: function(node) {\n\t\tthis.out = \"\";\n\t\tthis.left = [];\n\t\tthis.hardWrap = false;\n\t\tnode.childrenAccept(this);\n\t},\n\n\tvisitHeading: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tfor(var i=0; i<node.value; i++) {\n\t\t\tthis.out += \"=\";\n\t\t}\n\t\tif(node.hasChildren()) {\n\t\t  this.out += \" \";\n\t\t  node.childrenAccept(this);\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitBlockQuote: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\t\t\n\t\tif(node.hasChildren()) {\n\t\t\tthis.out += \"> \";\n\t\t\tthis.left.push(\"> \");\n\t\t\tnode.childrenAccept(this);\n\t\t\tthis.left.pop();\n\t\t} else {\n\t\t\tthis.out += \">\\n\";\n\t\t}\n\t\tif(!node.isNested()) {\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitListBlock: function(node) {\n\t\tnode.childrenAccept(this);\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t\tvar next = node.next();\n\t\t\tif(next.constructor.name === \"ListBlock\" && next.ordered === node.ordered) {\n\t\t\t\tthis.out += \"\\n\";\n\t\t\t}\n\t\t}\n\t},\n\n\tvisitListItem: function(node) {\n\t\tif(!node.parent.isNested() || !node.isFirstChild() || !node.parent.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tthis.left.push(\"  \");\n\t\tif(node.number) {\t\t\t\n\t\t\tthis.out += (node.number + \".\");\n\t\t} else {\n\t\t\tthis.out += \"-\";\n\t\t}\n\t\tif(node.hasChildren()) {\n\t\t\tthis.out += \" \";\n\t\t\tnode.childrenAccept(this);\n\t\t} else {\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t\tthis.left.pop();\n\t},\n\n\tvisitCodeBlock: function(node) {\n\t\tvar str = this.left.join(\"\");\n\t\tthis.out += \"```\";\n\t\tif(node.language) {\n\t\t\tthis.out += node.language;\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tthis.out += node.value.toString().replace(/^/gm, str);\n\t\tthis.out += \"\\n\";\n\t\tthis.indent();\n\t\tthis.out += \"```\";\t\t\n\t\tthis.out += \"\\n\";\n\t\tif(!node.isLastChild()) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitParagraph: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"\\n\";\n\t\t\n\t\tvar next = node.next();\n\t\tif(!node.isNested() || (node.parent.constructor.name === \"ListItem\" && (next && next.constructor.name === \"Paragraph\") && !node.isLastChild())) {\n\t\t\tthis.out += \"\\n\";\n\t\t} else if(node.parent.constructor.name === \"BlockQuote\" && (next && next.constructor.name === \"Paragraph\")) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\t\n\tvisitBlockElement: function(node) {\n\t\tif(!node.isFirstChild()) {\n\t\t\tthis.indent();\n\t\t}\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"\\n\";\n\t\tvar next = node.next();\n\t\tif(!node.isNested() || (node.parent.constructor.name === \"ListItem\" && (next && next.constructor.name === \"Paragraph\") && !node.isLastChild())) {\n\t\t\tthis.out += \"\\n\";\n\t\t} else if(node.parent.constructor.name === \"BlockQuote\" && (next && next.constructor.name === \"Paragraph\")) {\n\t\t\tthis.indent();\n\t\t\tthis.out += \"\\n\";\n\t\t}\n\t},\n\n\tvisitImage: function(node) {\n\t\tthis.out += \"[image: \";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"]\";\n\t\tif(node.value && node.value.trim().length > 0) {\n\t\t\tthis.out += \"(\";\n\t\t\tthis.out += this.escapeUrl(node.value);\n\t\t\tthis.out += \")\";\n\t\t}\n\t},\n\n\tvisitLink: function(node) {\n\t\tthis.out += \"[\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"]\";\n\t\tif(node.value && node.value.toString().trim().length > 0) {\n\t\t\tthis.out += \"(\";\n\t\t\tthis.out += this.escapeUrl(node.value);\n\t\t\tthis.out += \")\";\n\t\t}\n\t},\n\n\tvisitStrong: function(node) {\n\t\tthis.out += \"*\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"*\";\n\t},\n\n\tvisitEm: function(node) {\n\t\tthis.out += \"_\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"_\";\n\t},\n\n\tvisitCode: function(node) {\n\t\tthis.out += \"`\";\n\t\tnode.childrenAccept(this);\n\t\tthis.out += \"`\";\n\t},\n\n\tvisitText: function(node) {\n\t\tif(node.parent.constructor.name === \"Code\") {\n\t\t\tthis.out += node.value;\n\t\t} else {\n\t\t\tthis.out += this.escape(node.value);\n\t\t}\n\t},\n\n\tvisitLineBreak: function(node) {\n\t\tif(this.hardWrap || node.explicit) {\n\t\t\tthis.out += \"  \";\n\t\t}\n\t\tthis.out += \"\\n\";\n\t\tthis.indent();\n\t},\n\t\n\tescape: function(text) {\n\t\treturn text\n\t\t\t\t.replace(/\\[/gm, \"\\\\[\")\n\t\t\t\t.replace(/\\]/gm, \"\\\\]\")\n\t\t\t\t.replace(/\\*/gm, \"\\\\*\")\n\t\t\t\t.replace(/\\_/gm, \"\\\\_\")\n\t\t\t\t.replace(\"`\", \"\\\\`\")\n\t\t\t\t.replace(\"=\", \"\\\\=\")\n\t\t\t\t.replace(\">\", \"\\\\>\")\n\t\t\t\t.replace(\"-\", \"\\\\-\")\n\t\t\t\t.replace(/(\\d+)\\./, \"\\\\$1.\");\n\t},\n\t\n\tescapeUrl: function(text) {\n        return text.replace(/\\(/gm, \"\\\\(\")\n        \t.replace(/\\)/gm, \"\\\\)\");\n\t},\n\t\n\tindent: function() {\n\t\tthis.out += this.left.join(\"\");\n\t},\n\n\tgetOutput: function() {\n        return this.out.trim();\n\t}\n\n};\n\nmodule.exports = KoaraRenderer;\n\n\n","\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n","\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/document\");\nvar BlockElement = require(\"./ast/blockelement\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.blockQuotePrefix();\n            this.whiteSpace();\n            \n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        var token = this.consumeToken(this.tm.EOL);\n        linebreak.explicit = (token.image.substring(0, 2) == \"  \");\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.whiteSpace();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 3;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n","\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n","\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n","\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n"],"sourceRoot":"/source/"}