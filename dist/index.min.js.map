{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../index.js","index.min.js","../lib/koara.js","../lib/koara/ast/Document.js","../lib/koara/ast/blockelement.js","../lib/koara/ast/blockquote.js","../lib/koara/ast/code.js","../lib/koara/ast/codeblock.js","../lib/koara/ast/document.js","../lib/koara/ast/em.js","../lib/koara/ast/heading.js","../lib/koara/ast/image.js","../lib/koara/ast/linebreak.js","../lib/koara/ast/link.js","../lib/koara/ast/listblock.js","../lib/koara/ast/listitem.js","../lib/koara/ast/node.js","../lib/koara/ast/paragraph.js","../lib/koara/ast/strong.js","../lib/koara/ast/text.js","../lib/koara/charstream.js","../lib/koara/io/stringreader.js","../lib/koara/lookaheadsuccess.js","../lib/koara/parser.js","../lib/koara/token.js","../lib/koara/tokenmanager.js","../lib/koara/treestate.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","./lib/koara",2,"CharStream","Parser","StringReader","./koara/charstream","./koara/io/stringreader","./koara/parser",3,"Document","Node","this","prototype","constructor","accept","renderer","visitDocument","./node",4,"BlockElement","isNested","parent","isSingleChild","children","visitBlockElement","./document",5,"BlockQuote","visitBlockQuote","./blockelement",6,"Code","visitCode",7,"CodeBlock","visitCodeBlock",8,9,"Em","visitEm",10,"Heading","visitHeading",11,"Image","visitImage",12,"LineBreak","visitLineBreak",13,"Link","visitLink",14,"ListBlock","ordered","visitListBlock",15,"ListItem","visitListItem",16,"add","childrenAccept",17,"Paragraph","visitParagraph",18,"Strong","visitStrong",19,"Text","visitText",20,"reader","available","bufsize","tokenBegin","bufcolumn","bufpos","bufline","column","line","prevCharIsLF","buffer","maxNextCharInd","inBuf","tabSize","beginToken","c","readChar","fillBuff","updateLineColumn","read","backup","amount","getImage","slice","join","getEndColumn","getEndLine","getBeginColumn","getBeginLine",21,"text","index","offset","toString","substring","charactersRead","start",22,"LookaheadSuccess",23,"lookAheadSuccess","modules","currentBlockLevel","currentQuoteLevel","TokenManager","Token","TreeState","parse","parseReader","cs","tm","token","tree","nextTokenKind","document","openScope","getNextTokenKind","EOL","consumeToken","whiteSpace","hasAnyBlockElementsAhead","blockElement","blockAhead","EOF","closeScope","indexOf","headingAhead","heading","GT","blockQuote","DASH","unorderedList","hasOrderedListAhead","orderedList","hasFencedCodeBlockAhead","fencedCodeBlock","paragraph","headingLevel","EQ","headingHasInlineElementsAhead","hasTextAhead","hasImageAhead","image","hasLinkAhead","link","hasStrongAhead","strong","hasEmAhead","em","hasCodeAhead","looseChar","value","blockQuoteHasEmptyLineAhead","blockQuoteEmptyLine","blockQuoteHasAnyBlockElementseAhead","blockQuotePrefix","hasBlockQuoteEmptyLinesAhead","list","listBeginColumn","unorderedListItem","listItemAhead","listItem","listItemHasInlineElements","beginColumn","orderedListItem","DIGITS","DOT","number","codeBlock","BACKTICK","CHAR_SEQUENCE","language","codeLanguage","fencesAhead","levelWhiteSpace","ASTERISK","BACKSLASH","COLON","ESCAPED_CHAR","IMAGE_LABEL","LT","LBRACK","RBRACK","LPAREN","RPAREN","UNDERSCORE","nextAfterSpace","SPACE","TAB","inline","textAhead","lineBreak","textHasTokensAhead","ref","imageHasAnyElements","resourceText","hasResourceUrlAhead","resourceUrl","linkHasAnyElements","hasResourceTextAhead","strongHasElements","hasImage","multilineAhead","codeMultiline","strongEmWithinStrongAhead","emWithinStrong","addSingleValue","emHasElements","emHasStrongWithinEm","strongWithinEm","codeText","codeTextHasAnyTokenAhead","linebreak","threshold","currentPos","hasInlineTextAhead","strongMultiline","emMultiline","hasInlineElementAhead","resourceHasElementAhead","resourceUrlText","resourceTextHasElementsAhead","strongMultilineContent","hasEmWithinStrongMultiline","emWithinStrongMultiline","strongMultilineHasElementsAhead","strongWithinEmMultiline","strongWithinEmMultilineContent","strongWithinEmMultilineHasElementsAhead","strongWithinEmHasElementsAhead","emMultilineContent","hasStrongWithinEmMultilineAhead","emMultilineContentHasElementsAhead","emWithinStrongMultilineContent","emWithinStrongMultilineContentHasElementsAhead","emWithinStrongHasElementsAhead","lookAhead","lastPosition","scanPosition","scanMoreBlockElements","ls","blockBeginColumn","quoteLevel","getToken","kind","skip","newQuoteLevel","eol","tokens","scanToken","scanFencedCodeBlock","xsp","scanTextTokens","scanImage","scanLink","scanStrong","scanEm","scanCode","scanLooseChar","scanBlockQuoteEmptyLine","scanBlockQuoteEmptyLines","scanInlineElement","scanImageElement","scanResourceElements","scanLinkElement","scanResourceUrl","scanResourceElement","scanResourceTextElement","scanEmWithinStrongMultiline","scanStrongMultilineElements","scanStrongWithinEmMultilineElements","scanEmWithinStrong","scanStrongElements","scanStrongWithinEmElements","scanStrongWithinEmMultiline","scanEmMultilineContentElements","scanEmWithinStrongMultilineContent","scanStrongWithinEm","scanEmElements","scanEmWithinStrongElements","scanCodeTextTokens","scanText","lookingAhead","semanticLookAhead","scanWhitspaceToken","scanCodeTextTokensAhead","scanCodeMultiline","hasCodeTextOnNextLineAhead","scanWhitespaceTokenBeforeEol","scanWhitspaceTokens","hasNoEmWithinStrongMultilineContentAhead","scanForMoreStrongWithinEmMultilineElements","scanResourceTextElements","scanParagraph","scanForCodeLanguageElement","scanForCodeLanguageElements","scanForHeadersigns","next","getNextToken","nextToken","old","./ast/Document","./ast/blockquote","./ast/code","./ast/codeblock","./ast/em","./ast/heading","./ast/image","./ast/linebreak","./ast/link","./ast/listblock","./ast/listitem","./ast/paragraph","./ast/strong","./ast/text","./charstream","./io/stringreader","./lookaheadsuccess","./token","./tokenmanager","./treestate",24,"beginLine","endLine","endColumn",25,"stream","jjrounds","jjstateSet","jjnextStates","curPos","curChar","matchedKind","matchedPos","fillToken","moveStringLiteralDfa0","charCodeAt","startNfaWithStates","stopAtPos","moveStringLiteralDfa1","moveNfa","pos","state","active","moveStringLiteralDfa2","startNfa","moveStringLiteralDfa3","moveStringLiteralDfa4","moveStringLiteralDfa5","stopStringLiteralDfa","startState","jjnewStateCnt","startsAt","round","Number","Math","pow","bitwise64","checkNAdd","checkNAddStates","end","b","divisor","mask","result","shift","rs","floor",26,"nodes","marks","nodesOnStack","currentMark","push","nodeArity","pop","popNode","pushNode"],"mappings":"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","file":"index.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = require(\"./lib/koara\");\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\nmodule.exports = require(\"./lib/koara\");\n\n},{\"./lib/koara\":2}],2:[function(require,module,exports){\n\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");\n\n},{\"./koara/charstream\":20,\"./koara/io/stringreader\":21,\"./koara/parser\":23}],3:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":16}],4:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent instanceof Document);\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n\n},{\"./document\":8,\"./node\":16}],5:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n\n},{\"./blockelement\":4}],6:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n\n},{\"./node\":16}],7:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n\n},{\"./blockelement\":4}],8:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n\n},{\"./node\":16}],9:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n\n},{\"./node\":16}],10:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n\n},{\"./blockelement\":4}],11:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n\n},{\"./node\":16}],12:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n\n},{\"./node\":16}],13:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n\n},{\"./node\":16}],14:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n\n},{\"./blockelement\":4}],15:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n\n},{\"./node\":16}],16:[function(require,module,exports){\n\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n\n},{}],17:[function(require,module,exports){\n\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n\n},{\"./blockelement\":4}],18:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n\n},{\"./node\":16}],19:[function(require,module,exports){\n\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n\n},{\"./node\":16}],20:[function(require,module,exports){\n\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n\n},{}],21:[function(require,module,exports){\n\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n\n},{}],22:[function(require,module,exports){\n\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n\n},{}],23:[function(require,module,exports){\n\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens()) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanForCodeLanguageElements()) {\n            this.scanPosition = xsp;\n        }\n        xsp = this.scanPosition;\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n\n},{\"./ast/Document\":3,\"./ast/blockquote\":5,\"./ast/code\":6,\"./ast/codeblock\":7,\"./ast/em\":9,\"./ast/heading\":10,\"./ast/image\":11,\"./ast/linebreak\":12,\"./ast/link\":13,\"./ast/listblock\":14,\"./ast/listitem\":15,\"./ast/paragraph\":17,\"./ast/strong\":18,\"./ast/text\":19,\"./charstream\":20,\"./io/stringreader\":21,\"./lookaheadsuccess\":22,\"./token\":24,\"./tokenmanager\":25,\"./treestate\":26}],24:[function(require,module,exports){\n\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n\n},{}],25:[function(require,module,exports){\n\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n},{\"./token\":24}],26:[function(require,module,exports){\n\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n\n},{}]},{},[1])\n\n","\"use strict\";\n\nvar used = [],\n    exports = module.exports = {};\n\nexports.CharStream = require(\"./koara/charstream\");\nexports.Parser = require(\"./koara/parser\");\nexports.StringReader = require(\"./koara/io/stringreader\");","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\nvar Document = require(\"./document\");\n\nfunction BlockElement() {\n    Node.call(this);\n}\n\nBlockElement.prototype = new Node();\nBlockElement.prototype.constructor = BlockElement;\n\nBlockElement.prototype.isNested = function() {\n\treturn !(this.parent instanceof Document);\n};\n\nBlockElement.prototype.isSingleChild = function() {\n\treturn this.parent.children.length === 1;\n};\n\nBlockElement.prototype.accept = function(renderer) {\n    renderer.visitBlockElement(this);\n};\n\nmodule.exports = BlockElement;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction BlockQuote() {\n\tBlockElement.call(this);\n}\n\nBlockQuote.prototype = new BlockElement();\nBlockQuote.prototype.constructor = BlockQuote;\n\nBlockQuote.prototype.accept = function(renderer) {\n    renderer.visitBlockQuote(this);\n};\n\nmodule.exports = BlockQuote;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Code() {\n\tNode.call(this);\n}\n\nCode.prototype = new Node();\nCode.prototype.constructor = Code;\n\nCode.prototype.accept = function(renderer) {\n\trenderer.visitCode(this);\n};\n\nmodule.exports = Code;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction CodeBlock() {\n\tBlockElement.call(this);\n}\n\nCodeBlock.prototype = new BlockElement();\nCodeBlock.prototype.constructor = CodeBlock;\n\nCodeBlock.prototype.accept = function(renderer) {\n\trenderer.visitCodeBlock(this);\n};\n\nmodule.exports = CodeBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Document() {\n    Node.call(this);\n}\n\nDocument.prototype = new Node();\nDocument.prototype.constructor = Document;\nDocument.prototype.accept = function(renderer) {\n    renderer.visitDocument(this);\n};\n\nmodule.exports = Document;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Em() {\n\tNode.call(this);\n}\n\nEm.prototype = new Node();\nEm.prototype.constructor = Em;\n\nEm.prototype.accept = function(renderer) {\n\trenderer.visitEm(this);\n};\n\nmodule.exports = Em;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Heading() {\n\tBlockElement.call(this);\n}\n\nHeading.prototype = new BlockElement();\nHeading.prototype.constructor = Heading;\n\nHeading.prototype.accept = function(renderer) {\n    renderer.visitHeading(this);\n};\n\nmodule.exports = Heading;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Image() {\n\tNode.call(this);\n}\n\nImage.prototype = new Node();\nImage.prototype.constructor = Image;\n\nImage.prototype.accept = function(renderer) {\n\trenderer.visitImage(this);\n};\n\nmodule.exports = Image;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction LineBreak() {}\nLineBreak.prototype = new Node();\nLineBreak.prototype.constructor = LineBreak;\n\nLineBreak.prototype.accept = function(renderer) {\n\trenderer.visitLineBreak(this);\n};\n\nmodule.exports = LineBreak;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Link() {\n\tNode.call(this);\n}\n\nLink.prototype = new Node();\nLink.prototype.constructor = Link;\n\nLink.prototype.accept = function(renderer) {\n\trenderer.visitLink(this);\n};\n\nmodule.exports = Link;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction ListBlock(ordered) {\n\tBlockElement.call(this);\n\tthis.ordered = ordered;\n}\n\nListBlock.prototype = new BlockElement();\nListBlock.prototype.constructor = ListBlock;\n\nListBlock.prototype.accept = function(renderer) {\n\trenderer.visitListBlock(this);\n};\n\nmodule.exports = ListBlock;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction ListItem() {\n\tNode.call(this);\n}\n\nListItem.prototype = new Node();\nListItem.prototype.constructor = ListItem;\n\nListItem.prototype.accept = function(renderer) {\n\trenderer.visitListItem(this);\n};\n\nmodule.exports = ListItem;\n","\"use strict\";\n\nfunction Node() {\n\tthis.children = [];\n}\n\nNode.prototype = {\n\tconstructor: Node,\n\n\tadd: function(n, i) {\n\t\tthis.children[i] = n;\n\t},\n\n\tchildrenAccept: function(renderer) {\n\t\tfor (var i = 0; i < this.children.length; i++) {\n\t\t\tthis.children[i].accept(renderer);\n\t\t}\n\t}\n\n};\n\nmodule.exports = Node;\n","\"use strict\";\n\nvar BlockElement = require(\"./blockelement\");\n\nfunction Paragraph() {\n\tBlockElement.call(this);\n}\n\nParagraph.prototype = new BlockElement();\nParagraph.prototype.constructor = Paragraph;\n\nParagraph.prototype.accept = function(renderer) {\n    renderer.visitParagraph(this);\n};\n\nmodule.exports = Paragraph;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Strong() {\n\tNode.call(this);\n}\n\nStrong.prototype = new Node();\nStrong.prototype.constructor = Strong;\n\nStrong.prototype.accept = function(renderer) {\n\trenderer.visitStrong(this);\n};\n\nmodule.exports = Strong;\n","\"use strict\";\n\nvar Node = require(\"./node\");\n\nfunction Text() {\n    Node.call(this);\n}\n\nText.prototype = new Node();\nText.prototype.constructor = Text;\n\nText.prototype.accept = function(renderer) {\n\trenderer.visitText(this);\n};\n\nmodule.exports = Text;\n","\"use strict\";\n\nfunction CharStream(reader) {\n\tthis.available = 4096;\n\tthis.bufsize = 4096;\n\tthis.tokenBegin = 0;\n\tthis.bufcolumn = [];\n\tthis.bufpos = -1;\n\tthis.bufline = [];\n\tthis.column = 0;\n\tthis.line = 1;\n\tthis.prevCharIsLF = false;\n\tthis.reader = reader;\n\tthis.buffer = [];\n\tthis.maxNextCharInd = 0;\n\tthis.inBuf = 0;\n\tthis.tabSize = 4;\n}\n\nCharStream.prototype = {\n\tconstructor: CharStream,\n\n\tbeginToken: function() {\n\t\tthis.tokenBegin = -1;\n\t\tvar c = this.readChar();\n\n\t\tthis.tokenBegin = this.bufpos;\n\t\treturn c;\n\t},\n\n\treadChar: function() {\n\t\tif (this.inBuf > 0) {\n\t\t\t--this.inBuf;\n\t\t\tif (++this.bufpos === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t}\n\t\t\treturn this.buffer[this.bufpos];\n\t\t}\n\t\tif (++this.bufpos >= this.maxNextCharInd) {\n\t\t\tthis.fillBuff();\n\t\t}\n\n\t\tvar c = this.buffer[this.bufpos];\n\n\t\tthis.updateLineColumn(c);\n\t\treturn c;\n\t},\n\n\tfillBuff: function() {\n\t\tif (this.maxNextCharInd === this.available) {\n\t\t\tif (this.available === this.bufsize) {\n\t\t\t\tthis.bufpos = 0;\n\t\t\t\tthis.maxNextCharInd = 0;\n\t\t\t\tif (this.tokenBegin > 2048) {\n\t\t\t\t\tthis.available = this.tokenBegin;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.available = this.bufsize;\n\t\t\t}\n\t\t}\n        var i = 0;\n\n\t\ttry {\n\t\t\tif ((i = this.reader.read(this.buffer, this.maxNextCharInd, this.available - this.maxNextCharInd)) === -1) {\n\t\t\t\tthrow new Error(\"IOException\");\n\t\t\t} else {\n\t\t\t\tthis.maxNextCharInd += i;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t--this.bufpos;\n\t\t\tthis.backup(0);\n\t\t\tif (this.tokenBegin === -1) {\n\t\t\t\tthis.tokenBegin = this.bufpos;\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t},\n\n\tbackup: function(amount) {\n\t\tthis.inBuf += amount;\n\t\tif ((this.bufpos -= amount) < 0) {\n\t\t\tthis.bufpos += this.bufsize;\n\t\t}\n\t},\n\n\tupdateLineColumn: function(c) {\n\t\tthis.column++;\n\t\tif (this.prevCharIsLF) {\n\t\t\tthis.prevCharIsLF = false;\n\t\t\tthis.column = 1;\n\t\t\tthis.line += this.column;\n\t\t}\n\n\t\tswitch (c) {\n\t\tcase \"\\n\":\n\t\t\tthis.prevCharIsLF = true;\n\t\t\tbreak;\n\t\tcase \"\\t\":\n\t\t\tthis.column--;\n\t\t\tthis.column += this.tabSize - this.column % this.tabSize;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t\tthis.bufline[this.bufpos] = this.line;\n\t\tthis.bufcolumn[this.bufpos] = this.column;\n\t},\n\n\tgetImage: function() {\n\t\t\tif (this.bufpos >= this.tokenBegin) {\n\t\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufpos + 1).join(\"\");\n\t\t\t}\n\t\t\treturn this.buffer.slice(this.tokenBegin, this.bufsize).join(\"\") +\n                this.buffer.slice(0, this.bufpos + 1).join(\"\");\n\t},\n\n\tgetEndColumn: function() {\n\t\treturn this.tokenBegin in this.bufcolumn ? this.bufcolumn[this.bufpos] : 0;\n\t},\n\n\tgetEndLine: function() {\n\t\treturn this.tokenBegin in this.bufline ? this.bufline[this.bufpos] : 0;\n\t},\n\n\tgetBeginColumn: function() {\n\t\treturn this.bufpos in this.bufcolumn ? this.bufcolumn[this.tokenBegin] : 0;\n\t},\n\n\tgetBeginLine: function() {\n\t\treturn this.bufpos in this.bufline ? this.bufline[this.tokenBegin] : 0;\n\t}\n\n};\n\nmodule.exports = CharStream;\n","\"use strict\";\n\nfunction StringReader(text) {\n\tthis.index = 0;\n\tthis.text = text;\n}\n\nStringReader.prototype = {\n\tconstructor: StringReader,\n\n\tread: function(buffer, offset, length) {\n\t\tif (this.text.toString().substring(this.index).length > 0) {\n\t\t\tvar charactersRead = 0;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar start = this.index + i;\n\t\t\t\tvar c = this.text.toString().substring(start, start + 1);\n\n\t\t\t\tif (c !== \"\") {\n\t\t\t\t\tbuffer[offset + i] = c;\n\t\t\t\t\tcharactersRead++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.index += length;\n\t\t\treturn charactersRead;\n\t\t}\n\t\treturn -1;\n\t}\n};\n\nmodule.exports = StringReader;\n","\"use strict\";\n\nfunction LookaheadSuccess() {}\n\nmodule.exports = LookaheadSuccess;\n","\"use strict\";\n\nvar LookaheadSuccess = require(\"./lookaheadsuccess\");\nvar StringReader = require(\"./io/stringreader\");\nvar CharStream = require(\"./charstream\");\nvar TokenManager = require(\"./tokenmanager\");\nvar Token = require(\"./token\");\nvar TreeState = require(\"./treestate\");\n\nvar Document = require(\"./ast/Document\");\nvar BlockQuote = require(\"./ast/blockquote\");\nvar Code = require(\"./ast/code\");\nvar CodeBlock = require(\"./ast/codeblock\");\nvar Em = require(\"./ast/em\");\nvar Heading = require(\"./ast/heading\");\nvar Image = require(\"./ast/image\");\nvar LineBreak = require(\"./ast/linebreak\");\nvar Link = require(\"./ast/link\");\nvar ListBlock = require(\"./ast/listblock\");\nvar ListItem = require(\"./ast/listitem\");\nvar Paragraph = require(\"./ast/paragraph\");\nvar Strong = require(\"./ast/strong\");\nvar Text = require(\"./ast/text\");\n\nfunction Parser() {\n\tthis.lookAheadSuccess = new LookaheadSuccess();\n\tthis.modules = [\"paragraphs\", \"headings\", \"lists\", \"links\", \"images\", \"formatting\", \"blockquotes\", \"code\"];\n\tthis.currentBlockLevel = 0;\n\tthis.currentQuoteLevel = 0;\n}\n\nParser.prototype = {\n\tconstructor: Parser,\n\n\tparse: function(text) {\n\t\treturn this.parseReader(new StringReader(text));\n\t},\n\n\tparseReader: function(reader) {\n\t\tthis.cs = new CharStream(reader);\n\t\tthis.tm = new TokenManager(this.cs);\n\t\tthis.token = new Token();\n\t\tthis.tree = new TreeState();\n\t\tthis.nextTokenKind = -1;\n\n\t\tvar document = new Document();\n\n\t\tthis.tree.openScope();\n\n\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n\t\t\tthis.consumeToken(this.tm.EOL);\n\t\t}\n\t\tthis.whiteSpace();\n\t\tif (this.hasAnyBlockElementsAhead()) {\n\t\t\tthis.blockElement();\n\t\t\twhile (this.blockAhead(0)) {\n\t\t\t\twhile (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n\t\t\t\t}\n                this.blockElement();\n              }\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n        }\n        this.consumeToken(this.tm.EOF);\n        this.tree.closeScope(document);\n        return document;\n\t},\n\n\tblockElement: function() {\n        this.currentBlockLevel++;\n        if (this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(1)) {\n          this.heading();\n        } else if (this.modules.indexOf(\"blockquotes\") >= 0 && this.getNextTokenKind() === this.tm.GT) {\n          this.blockQuote();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.getNextTokenKind() === this.tm.DASH) {\n          this.unorderedList();\n        } else if (this.modules.indexOf(\"lists\") >= 0 && this.hasOrderedListAhead()) {\n          this.orderedList();\n        } else if (this.modules.indexOf(\"code\") >= 0 && this.hasFencedCodeBlockAhead()) {\n          this.fencedCodeBlock();\n        } else {\n          this.paragraph();\n        }\n        this.currentBlockLevel--;\n\t},\n\n    heading: function() {\n        var heading = new Heading();\n\n        this.tree.openScope();\n        var headingLevel = 0;\n\n        while (this.getNextTokenKind() === this.tm.EQ) {\n            this.consumeToken(this.tm.EQ);\n            headingLevel++;\n        }\n        this.whiteSpace();\n        while (this.headingHasInlineElementsAhead()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                this.looseChar();\n            }\n          }\n          heading.value = headingLevel;\n          this.tree.closeScope(heading);\n    },\n\n    blockQuote: function() {\n        var blockQuote = new BlockQuote();\n\n        this.tree.openScope();\n        this.currentQuoteLevel++;\n        this.consumeToken(this.tm.GT);\n        while (this.blockQuoteHasEmptyLineAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.whiteSpace();\n        if (this.blockQuoteHasAnyBlockElementseAhead()) {\n            this.blockElement();\n            while (this.blockAhead(0)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    this.blockQuotePrefix();\n                }\n                this.blockElement();\n            }\n        }\n        while (this.hasBlockQuoteEmptyLinesAhead()) {\n            this.blockQuoteEmptyLine();\n        }\n        this.currentQuoteLevel--;\n        this.tree.closeScope(blockQuote);\n      },\n\n      blockQuotePrefix: function() {\n        var i = 0;\n\n        do {\n            this.consumeToken(this.tm.GT);\n            this.whiteSpace();\n        } while (++i < this.currentQuoteLevel);\n      },\n\n      blockQuoteEmptyLine: function() {\n          this.consumeToken(this.tm.EOL);\n          this.whiteSpace();\n          do {\n              this.consumeToken(this.tm.GT);\n              this.whiteSpace();\n          } while (this.getNextTokenKind() === this.tm.GT);\n      },\n\n      unorderedList: function() {\n          var list = new ListBlock(false);\n\n          this.tree.openScope();\n          var listBeginColumn = this.unorderedListItem();\n\n          while (this.listItemAhead(listBeginColumn, false)) {\n              while (this.getNextTokenKind() === this.tm.EOL) {\n                  this.consumeToken(this.tm.EOL);\n              }\n              this.whiteSpace();\n              if (this.currentQuoteLevel > 0) {\n                  this.blockQuotePrefix();\n              }\n              this.unorderedListItem();\n          }\n          this.tree.closeScope(list);\n      },\n\n      unorderedListItem: function() {\n          var listItem = new ListItem();\n\n          this.tree.openScope();\n\n          var t = this.consumeToken(this.tm.DASH);\n\n          this.whiteSpace();\n          if (this.listItemHasInlineElements()) {\n              this.blockElement();\n              while (this.blockAhead(t.beginColumn)) {\n                 while (this.getNextTokenKind() === this.tm.EOL) {\n                     this.consumeToken(this.tm.EOL);\n                     this.whiteSpace();\n                     if (this.currentQuoteLevel > 0) {\n                         this.blockQuotePrefix();\n                     }\n                 }\n                 this.blockElement();\n              }\n          }\n          this.tree.closeScope(listItem);\n          return t.beginColumn;\n      },\n\n      orderedList: function() {\n        var list = new ListBlock(true);\n\n        this.tree.openScope();\n        var listBeginColumn = this.orderedListItem();\n\n        while (this.listItemAhead(listBeginColumn, true)) {\n            while (this.getNextTokenKind() === this.tm.EOL) {\n                this.consumeToken(this.tm.EOL);\n            }\n            this.whiteSpace();\n            if (this.currentQuoteLevel > 0) {\n                this.blockQuotePrefix();\n            }\n            this.orderedListItem();\n        }\n        this.tree.closeScope(list);\n    },\n\n    orderedListItem: function() {\n        var listItem = new ListItem();\n\n        this.tree.openScope();\n        var t = this.consumeToken(this.tm.DIGITS);\n\n        this.consumeToken(this.tm.DOT);\n        this.whiteSpace();\n        if (this.listItemHasInlineElements()) {\n            this.blockElement();\n            while (this.blockAhead(t.beginColumn)) {\n                while (this.getNextTokenKind() === this.tm.EOL) {\n                    this.consumeToken(this.tm.EOL);\n                    this.whiteSpace();\n                    if (this.currentQuoteLevel > 0) {\n                        this.blockQuotePrefix();\n                    }\n                }\n                this.blockElement();\n            }\n        }\n        listItem.number = t.image;\n        this.tree.closeScope(listItem);\n        return t.beginColumn;\n    },\n\n    fencedCodeBlock: function() {\n        var codeBlock = new CodeBlock();\n        var s = \"\";\n\n        this.tree.openScope();\n        var beginColumn = this.consumeToken(this.tm.BACKTICK).beginColumn;\n\n        do {\n            this.consumeToken(this.tm.BACKTICK);\n        } while (this.getNextTokenKind() === this.tm.BACKTICK);\n            this.whiteSpace();\n            if (this.getNextTokenKind() === this.tm.CHAR_SEQUENCE) {\n                codeBlock.language = this.codeLanguage();\n            }\n            if (this.getNextTokenKind() !== this.tm.EOF && !this.fencesAhead()) {\n                this.consumeToken(this.tm.EOL);\n                this.levelWhiteSpace(beginColumn);\n            }\n\n            while (this.getNextTokenKind() !== this.tm.EOF && (this.getNextTokenKind() !== this.tm.EOL || !this.fencesAhead())) {\n                switch (this.getNextTokenKind()) {\n                    case this.tm.CHAR_SEQUENCE:\n                        s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                        break;\n                    case this.tm.ASTERISK:\n                        s += this.consumeToken(this.tm.ASTERISK).image;\n                        break;\n                    case this.tm.BACKSLASH:\n                        s += this.consumeToken(this.tm.BACKSLASH).image;\n                        break;\n                    case this.tm.COLON:\n                        s += this.consumeToken(this.tm.COLON).image;\n                        break;\n                    case this.tm.DASH:\n                        s += this.consumeToken(this.tm.DASH).image;\n                        break;\n                    case this.tm.DIGITS:\n                        s += this.consumeToken(this.tm.DIGITS).image;\n                        break;\n                    case this.tm.DOT:\n                        s += this.consumeToken(this.tm.DOT).image;\n                        break;\n                    case this.tm.EQ:\n                        s += this.consumeToken(this.tm.EQ).image;\n                        break;\n                    case this.tm.ESCAPED_CHAR:\n                        s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                        break;\n                    case this.tm.IMAGE_LABEL:\n                        s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                        break;\n                    case this.tm.LT:\n                        s += this.consumeToken(this.tm.LT).image;\n                        break;\n                    case this.tm.GT:\n                        s += this.consumeToken(this.tm.GT).image;\n                        break;\n                    case this.tm.LBRACK:\n                        s += this.consumeToken(this.tm.LBRACK).image;\n                        break;\n                    case this.tm.RBRACK:\n                        s += this.consumeToken(this.tm.RBRACK).image;\n                        break;\n                    case this.tm.LPAREN:\n                        s += this.consumeToken(this.tm.LPAREN).image;\n                        break;\n                    case this.tm.RPAREN:\n                        s += this.consumeToken(this.tm.RPAREN).image;\n                        break;\n                    case this.tm.UNDERSCORE:\n                        s += this.consumeToken(this.tm.UNDERSCORE).image;\n                        break;\n                    case this.tm.BACKTICK:\n                        s += this.consumeToken(this.tm.BACKTICK).image;\n                        break;\n                    default:\n                        if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                            switch (this.getNextTokenKind()) {\n                            case this.tm.SPACE:\n                                s += this.consumeToken(this.tm.SPACE).image;\n                                break;\n                            case this.tm.TAB:\n                                this.consumeToken(this.tm.TAB);\n                                s += \"    \";\n                                break;\n                            }\n                        } else if (!this.fencesAhead()) {\n                            this.consumeToken(this.tm.EOL);\n                            s += \"\\n\";\n                            this.levelWhiteSpace(beginColumn);\n                        }\n            }\n        }\n        if (this.fencesAhead()) {\n            this.consumeToken(this.tm.EOL);\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.BACKTICK) {\n                this.consumeToken(this.tm.BACKTICK);\n            }\n        }\n        codeBlock.value = s.toString();\n        this.tree.closeScope(codeBlock);\n    },\n\n    paragraph: function() {\n        var paragraph = this.modules.indexOf(\"paragraphs\") >= 0 ? new Paragraph() : new BlockElement();\n\n        this.tree.openScope();\n        this.inline();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            if (this.modules.indexOf(\"blockquotes\") >= 0) {\n                while (this.getNextTokenKind() === this.tm.GT) {\n                    this.consumeToken(this.tm.GT);\n                    this.whiteSpace();\n                }\n            }\n            this.inline();\n        }\n        this.tree.closeScope(paragraph);\n    },\n\n    text: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n        while (this.textHasTokensAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        }\n\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n    image: function() {\n        var image = new Image();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        this.consumeToken(this.tm.IMAGE_LABEL);\n        this.whiteSpace();\n        while (this.imageHasAnyElements()) {\n            if (this.hasTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        image.value = ref;\n        this.tree.closeScope(image);\n    },\n\n    link: function() {\n        var link = new Link();\n        var ref = \"\";\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.LBRACK);\n        this.whiteSpace();\n        while (this.linkHasAnyElements()) {\n            if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasStrongAhead()) {\n                this.strong();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.hasEmAhead()) {\n                this.em();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasResourceTextAhead()) {\n                this.resourceText();\n            } else {\n                this.looseChar();\n            }\n        }\n        this.whiteSpace();\n        this.consumeToken(this.tm.RBRACK);\n        if (this.hasResourceUrlAhead()) {\n            ref = this.resourceUrl();\n        }\n        link.value = ref;\n        this.tree.closeScope(link);\n    },\n\n    strong: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        while (this.strongHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.strongEmWithinStrongAhead()) {\n                this.emWithinStrong();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    em: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        while (this.emHasElements()) {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImage()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.emHasStrongWithinEm()) {\n                this.strongWithinEm();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    code: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    codeText: function() {\n        var text = new Text();\n        var s = \"\";\n\n        this.tree.openScope();\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.EOL, this.tm.EOF])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.codeTextHasAnyTokenAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n    },\n\n   looseChar: function() {\n        var text = new Text();\n\n        this.tree.openScope();\n        switch (this.getNextTokenKind()) {\n        case this.tm.ASTERISK:\n            text.value = this.consumeToken(this.tm.ASTERISK).image;\n            break;\n        case this.tm.BACKTICK:\n            text.value = this.consumeToken(this.tm.BACKTICK).image;\n            break;\n        case this.tm.LBRACK:\n            text.value = this.consumeToken(this.tm.LBRACK).image;\n            break;\n        case this.tm.UNDERSCORE:\n            text.value = this.consumeToken(this.tm.UNDERSCORE).image;\n            break;\n        }\n        this.tree.closeScope(text);\n    },\n\n    lineBreak: function() {\n        var linebreak = new LineBreak();\n\n        this.tree.openScope();\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        this.consumeToken(this.tm.EOL);\n        this.tree.closeScope(linebreak);\n    },\n\n    levelWhiteSpace: function(threshold) {\n        var currentPos = 1;\n\n        while (this.getNextTokenKind() === this.tm.GT) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n        while ((this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) && currentPos < threshold - 1) {\n            currentPos = this.consumeToken(this.getNextTokenKind()).beginColumn;\n        }\n    },\n\n    codeLanguage: function() {\n        var s = \"\";\n\n        do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image;\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            case this.tm.SPACE:\n                s += this.consumeToken(this.tm.SPACE).image;\n                break;\n            case this.tm.TAB:\n                s += \"    \";\n                break;\n            default:\n                break;\n            }\n          } while (this.getNextTokenKind() !== this.tm.EOL && this.getNextTokenKind() !== this.tm.EOF);\n          return s;\n      },\n\n      inline: function() {\n          do {\n            if (this.hasInlineTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.ASTERISK)) {\n                this.strongMultiline();\n            } else if (this.modules.indexOf(\"formatting\") >= 0 && this.multilineAhead(this.tm.UNDERSCORE)) {\n                this.emMultiline();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else {\n                this.looseChar();\n            }\n          } while (this.hasInlineElementAhead());\n      },\n\n      resourceText: function() {\n          this.tree.openScope();\n          var text = new Text();\n          var s = \"\";\n\n          do {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RPAREN:\n                s += this.consumeToken(this.tm.RPAREN).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RBRACK])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n            }\n        } while (this.resourceHasElementAhead());\n        text.value = s;\n        this.tree.closeScope(text);\n      },\n\n      resourceUrl: function() {\n        this.consumeToken(this.tm.LPAREN);\n        this.whiteSpace();\n        var ref = this.resourceUrlText();\n\n        this.whiteSpace();\n        this.consumeToken(this.tm.RPAREN);\n        return ref;\n      },\n\n      resourceUrlText: function() {\n          var s = \"\";\n\n          while (this.resourceTextHasElementsAhead()) {\n            switch (this.getNextTokenKind()) {\n            case this.tm.CHAR_SEQUENCE:\n                s += this.consumeToken(this.tm.CHAR_SEQUENCE).image;\n                break;\n            case this.tm.ASTERISK:\n                s += this.consumeToken(this.tm.ASTERISK).image;\n                break;\n            case this.tm.BACKSLASH:\n                s += this.consumeToken(this.tm.BACKSLASH).image;\n                break;\n            case this.tm.BACKTICK:\n                s += this.consumeToken(this.tm.BACKTICK).image;\n                break;\n            case this.tm.COLON:\n                s += this.consumeToken(this.tm.COLON).image;\n                break;\n            case this.tm.DASH:\n                s += this.consumeToken(this.tm.DASH).image;\n                break;\n            case this.tm.DIGITS:\n                s += this.consumeToken(this.tm.DIGITS).image;\n                break;\n            case this.tm.DOT:\n                s += this.consumeToken(this.tm.DOT).image;\n                break;\n            case this.tm.EQ:\n                s += this.consumeToken(this.tm.EQ).image;\n                break;\n            case this.tm.ESCAPED_CHAR:\n                s += this.consumeToken(this.tm.ESCAPED_CHAR).image.substring(1);\n                break;\n            case this.tm.IMAGE_LABEL:\n                s += this.consumeToken(this.tm.IMAGE_LABEL).image;\n                break;\n            case this.tm.GT:\n                s += this.consumeToken(this.tm.GT).image;\n                break;\n            case this.tm.LBRACK:\n                s += this.consumeToken(this.tm.LBRACK).image;\n                break;\n            case this.tm.LPAREN:\n                s += this.consumeToken(this.tm.LPAREN).image;\n                break;\n            case this.tm.LT:\n                s += this.consumeToken(this.tm.LT).image;\n                break;\n            case this.tm.RBRACK:\n                s += this.consumeToken(this.tm.RBRACK).image;\n                break;\n            case this.tm.UNDERSCORE:\n                s += this.consumeToken(this.tm.UNDERSCORE).image;\n                break;\n            default:\n                if (!this.nextAfterSpace([this.tm.RPAREN])) {\n                    switch (this.getNextTokenKind()) {\n                    case this.tm.SPACE:\n                        s += this.consumeToken(this.tm.SPACE).image;\n                        break;\n                    case this.tm.TAB:\n                        this.consumeToken(this.tm.TAB);\n                        s += \"    \";\n                        break;\n                    }\n                }\n              }\n            }\n            return s;\n      },\n\n      strongMultiline: function() {\n          var strong = new Strong();\n\n          this.tree.openScope();\n          this.consumeToken(this.tm.ASTERISK);\n          this.strongMultilineContent();\n          while (this.textAhead()) {\n              this.lineBreak();\n              this.strongMultilineContent();\n          }\n          this.consumeToken(this.tm.ASTERISK);\n          this.tree.closeScope(strong);\n      },\n\n      strongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else if (this.hasEmWithinStrongMultiline()) {\n                this.emWithinStrongMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongMultilineHasElementsAhead());\n      },\n\n      strongWithinEmMultiline: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        this.strongWithinEmMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.strongWithinEmMultilineContent();\n        }\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n      },\n\n      strongWithinEmMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmMultilineHasElementsAhead());\n      },\n\n      strongWithinEm: function() {\n        var strong = new Strong();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.ASTERISK);\n        do {\n            if (this.hasTextAhead()) {\n               this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n               this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n               this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n               this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                case this.tm.UNDERSCORE:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.UNDERSCORE));\n                    break;\n                }\n            }\n        } while (this.strongWithinEmHasElementsAhead());\n        this.consumeToken(this.tm.ASTERISK);\n        this.tree.closeScope(strong);\n    },\n\n    emMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.multilineAhead(this.tm.BACKTICK)) {\n                this.codeMultiline();\n            } else if (this.hasStrongWithinEmMultilineAhead()) {\n                this.strongWithinEmMultiline();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrongMultiline: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.emWithinStrongMultilineContent();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.emWithinStrongMultilineContent();\n        }\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    emWithinStrongMultilineContent: function() {\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongMultilineContentHasElementsAhead());\n    },\n\n    emWithinStrong: function() {\n        var em = new Em();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.UNDERSCORE);\n        do {\n            if (this.hasTextAhead()) {\n                this.text();\n            } else if (this.modules.indexOf(\"images\") >= 0 && this.hasImageAhead()) {\n                this.image();\n            } else if (this.modules.indexOf(\"links\") >= 0 && this.hasLinkAhead()) {\n                this.link();\n            } else if (this.modules.indexOf(\"code\") >= 0 && this.hasCodeAhead()) {\n                this.code();\n            } else {\n                switch (this.getNextTokenKind()) {\n                case this.tm.ASTERISK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.ASTERISK));\n                    break;\n                case this.tm.BACKTICK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.BACKTICK));\n                    break;\n                case this.tm.LBRACK:\n                    this.tree.addSingleValue(new Text(), this.consumeToken(this.tm.LBRACK));\n                    break;\n                }\n            }\n        } while (this.emWithinStrongHasElementsAhead());\n        this.consumeToken(this.tm.UNDERSCORE);\n        this.tree.closeScope(em);\n    },\n\n    codeMultiline: function() {\n        var code = new Code();\n\n        this.tree.openScope();\n        this.consumeToken(this.tm.BACKTICK);\n        this.codeText();\n        while (this.textAhead()) {\n            this.lineBreak();\n            this.whiteSpace();\n            while (this.getNextTokenKind() === this.tm.GT) {\n                this.consumeToken(this.tm.GT);\n                this.whiteSpace();\n            }\n            this.codeText();\n        }\n        this.consumeToken(this.tm.BACKTICK);\n        this.tree.closeScope(code);\n    },\n\n    whiteSpace: function() {\n        while (this.getNextTokenKind() === this.tm.SPACE || this.getNextTokenKind() === this.tm.TAB) {\n            this.consumeToken(this.getNextTokenKind());\n        }\n    },\n\n    hasAnyBlockElementsAhead: function() {\n        try {\n            this.lookAhead = 1;\n            this.lastPosition = this.scanPosition = this.token;\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockAhead: function(blockBeginColumn) {\n        var quoteLevel = 0;\n\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var t = null;\n            var i = 2;\n\n            quoteLevel = 0;\n            do {\n                quoteLevel = 0;\n                do {\n                    t = this.getToken(i++);\n                    if (t.kind === this.tm.GT) {\n                        if (t.beginColumn === 1 && this.currentBlockLevel > 0 && this.currentQuoteLevel === 0) {\n                            return false;\n                        }\n                        quoteLevel++;\n                    }\n                } while (t.kind === this.tm.GT || t.kind === this.tm.SPACE || t.kind === this.tm.TAB);\n                if (quoteLevel > this.currentQuoteLevel) {\n                    return true;\n                }\n                if (quoteLevel < this.currentQuoteLevel) {\n                    return false;\n                }\n            } while (t.kind === this.tm.EOL);\n            return t.kind !== this.tm.EOF && (this.currentBlockLevel === 0 || t.beginColumn >= blockBeginColumn + 2);\n        }\n        return false;\n    },\n\n    multilineAhead: function(token) {\n        if (this.getNextTokenKind() === token && this.getToken(2).kind !== token && this.getToken(2).kind !== this.tm.EOL) {\n            for (var i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === token) {\n                    return true;\n                } else if (t.kind === this.tm.EOL) {\n                    i = this.skip(i + 1, [this.tm.SPACE, this.tm.TAB]);\n                    var quoteLevel = this.newQuoteLevel(i);\n\n                    if (quoteLevel === this.currentQuoteLevel) {\n                        i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                        if (this.getToken(i).kind === token || this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.DASH ||\n                            (this.getToken(i).kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) ||\n                            (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK &&\n                            this.getToken(i + 2).kind === this.tm.BACKTICK) || this.headingAhead(i)) {\n                            return false;\n                        }\n                    } else {\n                        return false;\n                    }\n                } else if (t.kind === this.tm.EOF) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    fencesAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n\n            if (this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) {\n                i = this.skip(i + 3, [this.tm.SPACE, this.tm.TAB]);\n                return this.getToken(i).kind === this.tm.EOL || this.getToken(i).kind === this.tm.EOF;\n            }\n        }\n        return false;\n    },\n\n    headingAhead: function(offset) {\n        if (this.getToken(offset).kind === this.tm.EQ) {\n            var heading = 1;\n\n            for (var i = (offset + 1); ; i++) {\n                if (this.getToken(i).kind !== this.tm.EQ) {\n                    return true;\n                }\n                if (++heading > 6) {\n                    return false;\n                }\n            }\n        }\n        return false;\n    },\n\n    listItemAhead: function(listBeginColumn, ordered) {\n        if (this.getNextTokenKind() === this.tm.EOL) {\n            for (var eol = 1, i = 2; ; i++) {\n                var t = this.getToken(i);\n\n                if (t.kind === this.tm.EOL && ++eol > 2) {\n                    return false;\n                } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB && t.kind !== this.tm.GT && t.kind !== this.tm.EOL) {\n                    if (ordered) {\n                        return (t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT && t.beginColumn >= listBeginColumn);\n                    }\n                    return t.kind === this.tm.DASH && t.beginColumn >= listBeginColumn;\n                }\n            }\n        }\n        return false;\n    },\n\n    textAhead: function() {\n        if (this.getNextTokenKind() === this.tm.EOL && this.getToken(2).kind !== this.tm.EOL) {\n            var i = this.skip(2, [this.tm.SPACE, this.tm.TAB]);\n            var quoteLevel = this.newQuoteLevel(i);\n\n            if (quoteLevel === this.currentQuoteLevel || !(this.modules.indexOf(\"blockquotes\") >= 0)) {\n                i = this.skip(i, [this.tm.SPACE, this.tm.TAB, this.tm.GT]);\n                var t = this.getToken(i);\n\n                return this.getToken(i).kind !== this.tm.EOL && !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DASH) &&\n                    !(this.modules.indexOf(\"lists\") >= 0 && t.kind === this.tm.DIGITS && this.getToken(i + 1).kind === this.tm.DOT) &&\n                    !(this.getToken(i).kind === this.tm.BACKTICK && this.getToken(i + 1).kind === this.tm.BACKTICK && this.getToken(i + 2).kind === this.tm.BACKTICK) &&\n                    !(this.modules.indexOf(\"headings\") >= 0 && this.headingAhead(i));\n            }\n        }\n        return false;\n    },\n\n    nextAfterSpace: function(tokens) {\n        var i = this.skip(1, [this.tm.SPACE, this.tm.TAB]);\n\n        return tokens.indexOf(this.getToken(i).kind) >= 0;\n    },\n\n    newQuoteLevel: function(offset) {\n        var quoteLevel = 0;\n\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (t.kind === this.tm.GT) {\n                quoteLevel++;\n            } else if (t.kind !== this.tm.SPACE && t.kind !== this.tm.TAB) {\n                return quoteLevel;\n            }\n\n        }\n    },\n\n    skip: function(offset, tokens) {\n        for (var i = offset; ; i++) {\n            var t = this.getToken(i);\n\n            if (tokens.indexOf(t.kind) === -1 || t.kind === this.tm.EOF) {\n                return i;\n            }\n        }\n    },\n\n    hasOrderedListAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanToken(this.tm.DIGITS) && !this.scanToken(this.tm.DOT);\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasFencedCodeBlockAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanFencedCodeBlock();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    headingHasInlineElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            var xsp = this.scanPosition;\n\n            if (this.scanTextTokens()) {\n                this.scanPosition = xsp;\n                if (this.scanImage()) {\n                    this.scanPosition = xsp;\n                    if (this.scanLink()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanEm()) {\n                                this.scanPosition = xsp;\n                                if (this.scanCode()) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanLooseChar()) {\n                                        return false;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return true;\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImageAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasEmptyLineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLine();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasCodeAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCode();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    blockQuoteHasAnyBlockElementseAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasBlockQuoteEmptyLinesAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanBlockQuoteEmptyLines();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    listItemHasInlineElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanMoreBlockElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasInlineElementAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanInlineElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    imageHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImageElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceTextAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    linkHasAnyElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLinkElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasResourceUrlAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceUrl();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceHasElementAhead: function() {\n        this.lookAhead = 2;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    resourceTextHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanResourceTextElement();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasEmWithinStrongMultiline: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmMultilineHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultilineElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasImage: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanImage();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasLinkAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanLink();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongEmWithinStrongAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrong();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    strongWithinEmHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    hasStrongWithinEmMultilineAhead: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEmMultiline();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmMultilineContentElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongMultilineContentHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongMultilineContent();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n   emHasStrongWithinEm: function() {\n        this.lookAhead = 2147483647;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanStrongWithinEm();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emHasElements: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    emWithinStrongHasElementsAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanEmWithinStrongElements();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    codeTextHasAnyTokenAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanCodeTextTokens();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    textHasTokensAhead: function() {\n        this.lookAhead = 1;\n        this.lastPosition = this.scanPosition = this.token;\n        try {\n            return !this.scanText();\n        } catch (ls) {\n            return true;\n        }\n    },\n\n    scanLooseChar: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.LBRACK)) {\n                    this.scanPosition = xsp;\n                    return this.scanToken(this.tm.UNDERSCORE);\n                }\n            }\n        }\n        return false;\n    },\n\n    scanText: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.COLON)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.GT)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.RPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                this.lookingAhead = true;\n                                                                this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                this.lookingAhead = false;\n                                                                return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanTextTokens: function() {\n        var xsp = null;\n\n        if (this.scanText()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanText()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanCodeTextTokens: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.COLON)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DASH)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DIGITS)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DOT)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.EQ)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LT)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LBRACK)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.GT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RPAREN)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.EOL, this.tm.EOF]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanCode: function() {\n        return this.scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead() || this.scanToken(this.tm.BACKTICK);\n    },\n\n    scanCodeMultiline: function() {\n        var xsp = null;\n\n        if (scanToken(this.tm.BACKTICK) || this.scanCodeTextTokensAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.hasCodeTextOnNextLineAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(BACKTICK);\n    },\n\n    scanCodeTextTokensAhead: function() {\n        var xsp = null;\n\n        if (this.scanCodeTextTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanCodeTextTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    hasCodeTextOnNextLineAhead: function() {\n        var xsp = null;\n\n        if (this.scanWhitespaceTokenBeforeEol()) {\n           return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanCodeTextTokensAhead();\n    },\n\n    scanWhitspaceTokens: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitspaceToken()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitespaceTokenBeforeEol: function() {\n        return this.scanWhitspaceTokens() || this.scanToken(this.tm.EOL);\n    },\n\n    scanEmWithinStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmWithinStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEm()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.scanEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmWithinStrongMultilineContent: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.ASTERISK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.LBRACK);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    hasNoEmWithinStrongMultilineContentAhead: function() {\n        var xsp = null;\n\n        if (this.scanEmWithinStrongMultilineContent()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanEmWithinStrongMultilineContent()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanEmWithinStrongMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.UNDERSCORE) || this.hasNoEmWithinStrongMultilineContentAhead()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.hasNoEmWithinStrongMultilineContentAhead()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.UNDERSCORE);\n    },\n\n    scanEmMultilineContentElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanStrongWithinEmMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.ASTERISK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.BACKTICK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.LBRACK);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEm: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongWithinEmElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrong()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanStrong: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanStrongElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongWithinEmMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.BACKTICK)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.LBRACK)) {\n                                this.scanPosition = xsp;\n                                return this.scanToken(this.tm.UNDERSCORE);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanForMoreStrongWithinEmMultilineElements: function() {\n        var xsp = null;\n\n        if (this.scanStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanStrongWithinEmMultiline: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.ASTERISK) || this.scanForMoreStrongWithinEmMultilineElements()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanWhitespaceTokenBeforeEol() || this.scanForMoreStrongWithinEmMultilineElements()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return this.scanToken(this.tm.ASTERISK);\n    },\n\n    scanStrongMultilineElements: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanEmWithinStrongMultiline()) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.BACKTICK)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.LBRACK)) {\n                                    this.scanPosition = xsp;\n                                    return this.scanToken(this.tm.UNDERSCORE);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.ASTERISK)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKSLASH)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.BACKTICK)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.COLON)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DASH)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.DIGITS)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.DOT)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.EQ)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.GT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.LBRACK)) {\n                                                            this.scanPosition = xsp;\n                                                            if (this.scanToken(this.tm.LPAREN)) {\n                                                                this.scanPosition = xsp;\n                                                                if (this.scanToken(this.tm.LT)) {\n                                                                    this.scanPosition = xsp;\n                                                                    if (this.scanToken(this.tm.RBRACK)) {\n                                                                        this.scanPosition = xsp;\n                                                                        if (this.scanToken(this.tm.UNDERSCORE)) {\n                                                                            this.scanPosition = xsp;\n                                                                            this.lookingAhead = true;\n                                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RPAREN]);\n                                                                            this.lookingAhead = false;\n                                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanImageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanResourceElements()) {\n            this.scanPosition = xsp;\n            if (this.scanLooseChar()) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanResourceTextElements: function() {\n        var xsp = null;\n\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceTextElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanResourceUrl: function() {\n        return this.scanToken(this.tm.LPAREN) || this.scanWhitspaceTokens() || this.scanResourceTextElements() ||\n            this.scanWhitspaceTokens() || this.scanToken(this.tm.RPAREN);\n    },\n\n    scanLinkElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanImage()) {\n            this.scanPosition = xsp;\n            if (this.scanStrong()) {\n                this.scanPosition = xsp;\n                if (this.scanEm()) {\n                    this.scanPosition = xsp;\n                    if (this.scanCode()) {\n                        this.scanPosition = xsp;\n                        if (this.scanResourceElements()) {\n                            this.scanPosition = xsp;\n                            return this.scanLooseChar();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.BACKSLASH)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.COLON)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DASH)) {\n                        this.scanPosition = xsp;\n                        if (this.scanToken(this.tm.DIGITS)) {\n                            this.scanPosition = xsp;\n                            if (this.scanToken(this.tm.DOT)) {\n                                this.scanPosition = xsp;\n                                if (this.scanToken(this.tm.EQ)) {\n                                    this.scanPosition = xsp;\n                                    if (this.scanToken(this.tm.ESCAPED_CHAR)) {\n                                        this.scanPosition = xsp;\n                                        if (this.scanToken(this.tm.IMAGE_LABEL)) {\n                                            this.scanPosition = xsp;\n                                            if (this.scanToken(this.tm.GT)) {\n                                                this.scanPosition = xsp;\n                                                if (this.scanToken(this.tm.LPAREN)) {\n                                                    this.scanPosition = xsp;\n                                                    if (this.scanToken(this.tm.LT)) {\n                                                        this.scanPosition = xsp;\n                                                        if (this.scanToken(this.tm.RPAREN)) {\n                                                            this.scanPosition = xsp;\n                                                            this.lookingAhead = true;\n                                                            this.semanticLookAhead = !this.nextAfterSpace([this.tm.RBRACK]);\n                                                            this.lookingAhead = false;\n                                                            return (!this.semanticLookAhead || this.scanWhitspaceToken());\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanResourceElements: function() {\n        var xsp = null;\n\n        if (this.scanResourceElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanResourceElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanLink: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanLinkElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanLinkElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanImage: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.LBRACK) || this.scanWhitspaceTokens() || this.scanToken(this.tm.IMAGE_LABEL) || this.scanImageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanImageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens() || this.scanToken(this.tm.RBRACK)) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanResourceUrl()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanInlineElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanTextTokens()) {\n            this.scanPosition = xsp;\n            if (this.scanImage()) {\n                this.scanPosition = xsp;\n                if (this.scanLink()) {\n                    this.scanPosition = xsp;\n                    this.lookingAhead = true;\n                    this.semanticLookAhead = this.multilineAhead(this.tm.ASTERISK);\n                    this.lookingAhead = false;\n                    if (!this.semanticLookAhead || this.scanToken(this.tm.ASTERISK)) {\n                        this.scanPosition = xsp;\n                        this.lookingAhead = true;\n                        this.semanticLookAhead = this.multilineAhead(this.tm.UNDERSCORE);\n                        this.lookingAhead = false;\n                        if (!this.semanticLookAhead || this.scanToken(this.tm.UNDERSCORE)) {\n                            this.scanPosition = xsp;\n                            this.lookingAhead = true;\n                            this.semanticLookAhead = this.multilineAhead(this.tm.BACKTICK);\n                            this.lookingAhead = false;\n                            if (!this.semanticLookAhead || this.scanCodeMultiline()) {\n                                this.scanPosition = xsp;\n                                return this.scanLooseChar();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanParagraph: function() {\n        var xsp = null;\n\n        if (this.scanInlineElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanInlineElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElement: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.CHAR_SEQUENCE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanForCodeLanguageElements: function() {\n        var xsp = null;\n\n        if (this.scanForCodeLanguageElement()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanForCodeLanguageElement()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanWhitspaceToken: function() {\n        var xsp = this.scanPosition;\n\n        if (this.scanToken(this.tm.SPACE)) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.TAB)) {\n                return true;\n            }\n        }\n        return false;\n    },\n\n    scanFencedCodeBlock: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK) || this.scanToken(this.tm.BACKTICK)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.BACKTICK)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        if (this.scanWhitspaceTokens()) {\n            return true;\n        }\n        xsp = this.scanPosition;\n        if (this.scanForCodeLanguageElements()) {\n            this.scanPosition = xsp;\n        }\n        xsp = this.scanPosition;\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens()) {\n            this.scanPosition = xsp;\n        }\n        return false;\n    },\n\n    scanBlockQuoteEmptyLines: function() {\n        return this.scanBlockQuoteEmptyLine() || this.scanToken(this.tm.EOL);\n    },\n\n    scanBlockQuoteEmptyLine: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EOL) || this.scanWhitspaceTokens() || this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.GT) || this.scanWhitspaceTokens()) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanForHeadersigns: function() {\n        var xsp = null;\n\n        if (this.scanToken(this.tm.EQ)) {\n            return true;\n        }\n        while (true) {\n            xsp = this.scanPosition;\n            if (this.scanToken(this.tm.EQ)) {\n                this.scanPosition = xsp;\n                break;\n            }\n        }\n        return false;\n    },\n\n    scanMoreBlockElements: function() {\n        var xsp = this.scanPosition;\n\n        this.lookingAhead = true;\n        this.semanticLookAhead = this.headingAhead(1);\n        this.lookingAhead = false;\n        if (!this.semanticLookAhead || this.scanForHeadersigns()) {\n            this.scanPosition = xsp;\n            if (this.scanToken(this.tm.GT)) {\n                this.scanPosition = xsp;\n                if (this.scanToken(this.tm.DASH)) {\n                    this.scanPosition = xsp;\n                    if (this.scanToken(this.tm.DIGITS) || this.scanToken(this.tm.DOT)) {\n                        this.scanPosition = xsp;\n                        if (this.scanFencedCodeBlock()) {\n                            this.scanPosition = xsp;\n                            return this.scanParagraph();\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    },\n\n    scanToken: function(kind) {\n        if (this.scanPosition === this.lastPosition) {\n            this.lookAhead--;\n            if (!this.scanPosition.next) {\n                this.lastPosition = this.scanPosition = this.scanPosition.next = this.tm.getNextToken();\n            } else {\n                this.lastPosition = this.scanPosition = this.scanPosition.next;\n            }\n        } else {\n            this.scanPosition = this.scanPosition.next;\n        }\n        if (this.scanPosition.kind !== kind) {\n            return true;\n        }\n        if (this.lookAhead === 0 && this.scanPosition === this.lastPosition) {\n            throw this.lookAheadSuccess;\n        }\n        return false;\n    },\n\n    getNextTokenKind: function() {\n        if (this.nextTokenKind !== -1) {\n            return this.nextTokenKind;\n        } else if (!(this.nextToken = this.token.next)) {\n            this.token.next = this.tm.getNextToken();\n            return (this.nextTokenKind = this.token.next.kind);\n        }\n        return (this.nextTokenKind = this.nextToken.kind);\n    },\n\n    consumeToken: function(kind) {\n        var old = this.token;\n\n        if (this.token.next !== null) {\n            this.token = this.token.next;\n        } else {\n            this.token = this.token.next = this.tm.getNextToken();\n        }\n        this.nextTokenKind = -1;\n        if (this.token.kind === kind) {\n            return this.token;\n        }\n        this.token = old;\n        return this.token;\n    },\n\n    getToken: function(index) {\n        var t = this.lookingAhead ? this.scanPosition : this.token;\n\n        for (var i = 0; i < index; i++) {\n            if (t.next) {\n                t = t.next;\n            } else {\n                t = t.next = this.tm.getNextToken();\n            }\n        }\n        return t;\n    }\n\n};\n\nmodule.exports = Parser;\n","\"use strict\";\n\nfunction Token(kind, beginLine, beginColumn, endLine, endColumn, image) {\n\tthis.kind = kind;\n\tthis.beginLine = beginLine;\n\tthis.beginColumn = beginColumn;\n    this.endLine = endLine;\n\tthis.endColumn = endColumn;\n\tthis.image = image;\n}\n\nmodule.exports = Token;\n","\"use strict\";\n\nvar Token = require(\"./token\");\n\nfunction TokenManager(stream) {\n\tthis.cs = stream;\n\tthis.jjrounds = [];\n\tthis.jjstateSet = [];\n\tthis.jjnextStates = [2, 3, 5];\n}\n\nTokenManager.prototype = {\n\tconstructor: TokenManager,\n\n\tEOF: 0,\n\tASTERISK: 1,\n\tBACKSLASH: 2,\n\tBACKTICK: 3,\n\tCHAR_SEQUENCE: 4,\n\tCOLON: 5,\n\tDASH: 6,\n\tDIGITS: 7,\n\tDOT: 8,\n\tEOL: 9,\n\tEQ: 10,\n\tESCAPED_CHAR: 11,\n\tGT: 12,\n\tIMAGE_LABEL: 13,\n\tLBRACK: 14,\n\tLPAREN: 15,\n\tLT: 16,\n\tRBRACK: 17,\n\tRPAREN: 18,\n\tSPACE: 19,\n\tTAB: 20,\n\tUNDERSCORE: 21,\n\n    getNextToken: function() {\n        try {\n            var curPos = 0;\n\n            while (true) {\n                try {\n                    this.curChar = this.cs.beginToken();\n                } catch (e) {\n                    this.matchedKind = 0;\n                    this.matchedPos = -1;\n                    return this.fillToken();\n                }\n\n                this.matchedKind = 2147483647;\n                this.matchedPos = 0;\n                curPos = this.moveStringLiteralDfa0();\n\n                if (this.matchedKind !== 2147483647) {\n                    if (this.matchedPos + 1 < curPos) {\n                        this.cs.backup(curPos - this.matchedPos - 1);\n                    }\n                    return this.fillToken();\n                }\n            }\n        } catch (e) {\n            return null;\n        }\n    },\n\n    fillToken: function() {\n        return new Token(this.matchedKind, this.cs.getBeginLine(), this.cs.getBeginColumn(), this.cs.getEndLine(), this.cs.getEndColumn(),\n                this.cs.getImage());\n    },\n\n    moveStringLiteralDfa0: function() {\n        switch (this.curChar.charCodeAt(0)) {\n        case 9: return this.startNfaWithStates(0, this.TAB, 8);\n        case 32: return this.startNfaWithStates(0, this.SPACE, 8);\n        case 40: return this.stopAtPos(0, this.LPAREN);\n        case 41: return this.stopAtPos(0, this.RPAREN);\n        case 42: return this.stopAtPos(0, this.ASTERISK);\n        case 45: return this.stopAtPos(0, this.DASH);\n        case 46: return this.stopAtPos(0, this.DOT);\n        case 58: return this.stopAtPos(0, this.COLON);\n        case 60: return this.stopAtPos(0, this.LT);\n        case 61: return this.stopAtPos(0, this.EQ);\n        case 62: return this.stopAtPos(0, this.GT);\n        case 73: return this.moveStringLiteralDfa1(0x2000);\n        case 91: return this.stopAtPos(0, this.LBRACK);\n        case 92: return this.startNfaWithStates(0, this.BACKSLASH, 7);\n        case 93: return this.stopAtPos(0, this.RBRACK);\n        case 95: return this.stopAtPos(0, this.UNDERSCORE);\n        case 96: return this.stopAtPos(0, this.BACKTICK);\n        case 105: return this.moveStringLiteralDfa1(0x2000);\n        default: return this.moveNfa(6, 0);\n        }\n    },\n\n    startNfaWithStates: function(pos, kind, state) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        try {\n            this.curChar = this.cs.readChar();\n        } catch (e) {\n            return pos + 1;\n        }\n        return this.moveNfa(state, pos + 1);\n    },\n\n    stopAtPos: function(pos, kind) {\n        this.matchedKind = kind;\n        this.matchedPos = pos;\n        return pos + 1;\n    },\n\n    moveStringLiteralDfa1: function(active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 77 || this.curChar.charCodeAt(0) === 109) {\n            return this.moveStringLiteralDfa2(active, 0x2000);\n        }\n        return this.startNfa(0, active);\n    },\n\n    moveStringLiteralDfa2: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 65 || this.curChar.charCodeAt(0) === 97) {\n            return this.moveStringLiteralDfa3(active, 0x2000);\n        }\n        return this.startNfa(1, active);\n\n    },\n\n    moveStringLiteralDfa3: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 71 || this.curChar.charCodeAt(0) === 103) {\n            return this.moveStringLiteralDfa4(active, 0x2000);\n        }\n        return this.startNfa(2, active);\n    },\n\n    moveStringLiteralDfa4: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 69 || this.curChar.charCodeAt(0) === 101) {\n            return this.moveStringLiteralDfa5(active, 0x2000);\n        }\n        return this.startNfa(3, active);\n    },\n\n    moveStringLiteralDfa5: function(old, active) {\n        this.curChar = this.cs.readChar();\n        if (this.curChar.charCodeAt(0) === 58 && ((active & 0x2000) !== 0)) {\n            return this.stopAtPos(5, 13);\n        }\n        return this.startNfa(4, active);\n    },\n\n    startNfa: function(pos, active) {\n        return this.moveNfa(this.stopStringLiteralDfa(pos, active), pos + 1);\n    },\n\n    moveNfa: function(startState, curPos) {\n        this.jjnewStateCnt = 8;\n        this.jjstateSet[0] = startState;\n        var startsAt = 0;\n        var i = 1;\n        var l = null;\n        var kind = 0x7fffffff;\n\n        while (true) {\n            if (++this.round === 0x7fffffff) {\n                this.round = 0x80000001;\n            }\n            if (this.curChar.charCodeAt(0) < 64) {\n                l = 1 * Number(Math.pow(2, this.curChar.charCodeAt(0)));\n\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        } else if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(4294967808, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 8:\n                        if (this.bitwise64(0x2400, l) !== 0) {\n                            if (kind > 9) {\n                                kind = 9;\n                            }\n                        } else if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0x880098feffffd9ff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 1:\n                        if (this.bitwise64(0x3ff000000000000, l) !== 0) {\n                            if (kind > 7) {\n                                kind = 7;\n                            }\n                            this.checkNAdd(1);\n                        }\n                        break;\n                    case 2:\n                        if (this.bitwise64(0x100000200, l) !== 0) {\n                            this.checkNAddStates(0, 2);\n                        }\n                        break;\n                    case 3:\n                        if (this.bitwise64(0x2400, l) !== 0 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 4:\n                        if (this.curChar.charCodeAt(0) === 10 && kind > 9) {\n                            kind = 9;\n                        }\n                        break;\n                    case 5:\n                        if (this.curChar.charCodeAt(0) === 13) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 4;\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x77ff670000000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else if (this.curChar.charCodeAt(0) < 128) {\n                l = 1 * Number(Math.pow(2, this.bitwise64(this.curChar.charCodeAt(0), 63)));\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                        if (l !== 0) {\n                            if (kind > 4) {\n                                kind = 4;\n                            }\n                            this.checkNAdd(0);\n                        } else if (this.curChar.charCodeAt(0) === 92) {\n                            this.jjstateSet[this.jjnewStateCnt++] = 7;\n                        }\n                        break;\n                    case 0:\n                        if (this.bitwise64(0xfffffffe47ffffff, l) !== 0) {\n                            kind = 4;\n                            this.checkNAdd(0);\n                        }\n                        break;\n                    case 7:\n                        if (this.bitwise64(0x1b8000000, l) !== 0 && kind > 11) {\n                            kind = 11;\n                        }\n                        break;\n                    }\n                } while (i !== startsAt);\n            } else {\n                do {\n                    switch (this.jjstateSet[--i]) {\n                    case 6:\n                    case 0:\n                        if (kind > 4) {\n                            kind = 4;\n                        }\n                        this.checkNAdd(0);\n                        break;\n                    }\n                } while (i !== startsAt);\n            }\n\n            if (kind !== 0x7fffffff) {\n                this.matchedKind = kind;\n                this.matchedPos = curPos;\n                kind = 0x7fffffff;\n            }\n            ++curPos;\n\n            if ((i = this.jjnewStateCnt) === (startsAt = 8 - (this.jjnewStateCnt = startsAt))) {\n                return curPos;\n            }\n            try {\n                this.curChar = this.cs.readChar();\n            } catch (e) {\n                return curPos;\n            }\n          }\n      },\n\n    checkNAddStates: function(start, end) {\n        do {\n            this.checkNAdd(this.jjnextStates[start]);\n        } while (start++ !== end);\n    },\n\n    checkNAdd: function(state) {\n        if (this.jjrounds[state] !== this.round) {\n            this.jjstateSet[this.jjnewStateCnt++] = state;\n            this.jjrounds[state] = this.round;\n        }\n    },\n\n    stopStringLiteralDfa: function(pos, active) {\n        if (pos === 0) {\n            if (this.bitwise64(active, 0x2000) !== 0) {\n                this.matchedKind = 4;\n                return 0;\n            } else if (this.bitwise64(active, 0x180000) !== 0) {\n                return 8;\n            } else if (this.bitwise64(active, 0x4) !== 0) {\n                return 7;\n            }\n        } else if (pos === 1 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 1;\n            return 0;\n        } else if (pos === 2 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 2;\n            return 0;\n        } else if (pos === 3 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 3;\n            return 0;\n        } else if (pos === 4 && this.bitwise64(active, 0x2000) !== 0) {\n            this.matchedKind = 4;\n            this.matchedPos = 4;\n            return 0;\n        }\n        return -1;\n    },\n\n    bitwise64: function(a, b) {\n        var divisor = 1 << 30;\n        var mask = ~((~0) << 30);\n        var result = 0;\n        var shift = 0;\n\n        while ((a !== 0) && (b !== 0)) {\n            var rs = (mask & a) & (mask & b);\n\n            a = Math.floor(a / divisor);\n            b = Math.floor(b / divisor);\n            for (var i = shift++; i--;) {\n                rs *= divisor;\n            }\n            result += rs;\n        }\n        return result;\n    }\n\n};\n\nmodule.exports = TokenManager;\n\n","\"use strict\";\n\nfunction TreeState() {\n\tthis.nodes = [];\n\tthis.marks = [];\n\tthis.nodesOnStack = 0;\n\tthis.currentMark = 0;\n}\n\nTreeState.prototype = {\n\tconstructor: TreeState,\n\n\topenScope: function() {\n\t\tthis.marks.push(this.currentMark);\n\t\tthis.currentMark = this.nodesOnStack;\n\t},\n\n\tcloseScope: function(n) {\n        var a = this.nodeArity();\n\n\t\tthis.currentMark = this.marks.pop();\n\t\twhile (a-- > 0) {\n          var c = this.popNode();\n\n          c.parent = n;\n          n.add(c, a);\n        }\n\t\tthis.pushNode(n);\n\t},\n\n\taddSingleValue: function(n, t) {\n\t\tthis.openScope();\n        n.value = t.image;\n        this.closeScope(n);\n\t},\n\n\tnodeArity: function() {\n\t\treturn this.nodesOnStack - this.currentMark;\n\t},\n\n    popNode: function() {\n        --this.nodesOnStack;\n        return this.nodes.pop();\n    },\n\n    pushNode: function(n) {\n        this.nodes.push(n);\n        ++this.nodesOnStack;\n    }\n\n};\n\nmodule.exports = TreeState;\n"],"sourceRoot":"/source/"}